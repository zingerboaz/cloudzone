{"version":3,"sources":["./src/app/components/sale/sale.component.ts","./src/app/components/sale/sale.component.html","./src/app/components/sign-result1/sign-result1.component.ts","./src/app/components/sign-result1/sign-result1.component.html","./src/app/components/code/code.component.ts","./src/app/components/code/code.component.html","./src/environments/environment.ts","./src/app/components/manager-users/manager-users.component.ts","./src/app/components/manager-users/manager-users.component.html","./src/app/services/file-upload.service.ts","./src/app/services/server.service.ts","./src/app/components/hom/hom.component.ts","./src/app/components/hom/hom.component.html","./src/app/components/manager/manager.component.ts","./src/app/components/manager/manager.component.html","./src/app/components/upload-intern/upload-intern.component.ts","./src/app/components/upload-intern/upload-intern.component.html","./src/app/auth/auth-guard.service.ts","./src/app/components/exam-results/exam-results.component.ts","./src/app/components/exam-results/exam-results.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/answer-test-page/answer-test-page.component.ts","./src/app/components/answer-test-page/answer-test-page.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login1/login1.component.ts","./src/app/components/login1/login1.component.html","./src/app/components/models/file-upload.ts","./src/app/components/upload-form/upload-form.component.ts","./src/app/components/upload-form/upload-form.component.html","./src/app/app.module.ts","./src/app/components/creat-test/creat-test.component.ts","./src/app/components/creat-test/creat-test.component.html","./src/app/components/test/test.component.ts","./src/app/components/test/test.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/test-page/test-page.component.ts","./src/app/components/test-page/test-page.component.html","./src/app/components/upload-details/upload-details.component.ts","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/sign-result2/sign-result2.component.ts","./src/app/components/sign-result2/sign-result2.component.html","./src/app/components/manager-update-test/manager-update-test.component.ts","./src/app/components/manager-update-test/manager-update-test.component.html","./src/app/components/sign-up1/sign-up1.component.ts","./src/app/components/sign-up1/sign-up1.component.html","./src/app/components/sign-result/sign-result.component.ts","./src/app/components/sign-result/sign-result.component.html","./src/app/services/home.service.ts","./src/app/components/upload-list/upload-list.component.ts","./src/app/auth/auth.service.ts","./src/app/components/practises/practises.component.ts","./src/app/components/practises/practises.component.html","./src/app/services/token.service.ts","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/app-routing.module.ts","./src/app/services/fire-base.service.ts","./src/main.ts","./src/app/components/see-result/see-result.component.ts","./src/app/components/see-result/see-result.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sale',\n  templateUrl: './sale.component.html',\n  styleUrls: ['./sale.component.css']\n})\nexport class SaleComponent implements OnInit {\n  header:string\n  i:number;\n  \n  constructor() {\n    this.header=\"hello\"\n    this.i=1\n   }\n\n  ngOnInit(): void {\n  }\n  onuzerClick() :void {\n      this.header=\"you clicked\"+this. i++\n\n    }\n}\n","{{header}}\n{{i}}\n<button (click)=\"onuzerClick()\">click my</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { personModel } from 'src/app/components/models/person.model';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-sign-result1',\n  templateUrl: './sign-result1.component.html',\n  styleUrls: ['./sign-result1.component.css']\n})\nexport class SignResult1Component implements OnInit {\n  user: any = {};\n\n  constructor(private router: Router, private homeService: HomeService, private serverService: ServerService) { }\n\n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n  }\n\n  check() {\n    this.router.navigate([\"/app-sign-result2\"]);\n  }\n}\n\n\n","<div class=\"c\">\n       <ng-container *ngIf=\"user.full_name\">\n              <div class=\"row\">\n                     <h1> Thank you, {{user.full_name}}</h1>\n                     <span>\n                            <i class=\"bi bi-check2\"></i> Your user has been successfully creaed\n                     </span>\n\n                     <div>\n                            <h3>in order to fit the simulator you need to have a short questionnaire</h3>\n                     </div>\n\n                     <div class=\"col-auto\">\n                            <button (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">LET\"S START</button>\n                     </div>\n                     <div class=\"z\"> {{user.full_name}}</div>\n              </div>\n       </ng-container>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from 'src/app/services/home.service';\nimport { personModel } from 'src/app/components/models/person.model';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-code',\n  templateUrl: './code.component.html',\n  styleUrls: ['./code.component.css']\n})\nexport class CodeComponent implements OnInit {\n  user: any;\n  Password  = {\n    number: null\n  };\n  smsCode: number = 1234;\n  c: number = 0;\n  \n  constructor(private homeService: HomeService,private router:Router) { }\n  \n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n  }\n\n  check() {\n    console.log(this.Password.number);\n\n    if (this.Password.number == this.smsCode) {\n      console.log('c=1');\n      \n      this.router.navigate([\"/sign-result\"]);\n    }\n    else {\n     this.c = 2;\n    }\n\n  }\n}\n","<div class=\"a\">\n       <span>\n              <h1> Hi, {{user.full_name}} please type the \n              mobile verification\n              code you received</h1>\n       </span>\n       <!-- <form class=\"row g-3\"> -->\n       \n              <div class=\"col-auto b\">\n                     <label for=\"inputPassword2\" class=\"visually-hidden\">Password</label>\n                     <input [(ngModel)]=\"Password.number\" type=\"password\" class=\"form-control\" id=\"inputPassword2\"\n                            placeholder=\"Password\">\n              </div>\n              <div class=\"col-auto b \">\n                     <button  (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">Confirm\n                            identity</button>\n              </div>\n       <!-- </form> -->\n       <h1>i did not receive, resend</h1>\n</div>\n\n<app-sign-up1 *ngIf=\"c==2\"></app-sign-up1>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDFwzpRP8pOax7ySEaWbIj50rqxx_qtFDs\",\n    authDomain: \"my-project-97a17.firebaseapp.com\",\n    databaseURL: \"https://my-project-97a17-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"my-project-97a17\",\n    storageBucket: \"my-project-97a17.appspot.com\",\n    messagingSenderId: \"932111491086\",\n    appId: \"1:932111491086:web:2c4e87f6ab3fa1adc95c5f\",\n    measurementId: \"G-90JH88E5X2\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { personModel } from '../models/person.model';\n\n@Component({\n  selector: 'app-manager-users',\n  templateUrl: './manager-users.component.html',\n  styleUrls: ['./manager-users.component.css']\n})\nexport class ManagerUsersComponent implements OnInit {\n@Input()users:any[];\nbuttDisble:boolean\n  constructor(public fireBase: FireBaseService,private router:Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  showImg(index) {\n    this.fireBase.currentAnswerTestIndex = index;\n    console.log(index);\n\n    this.router.navigate(['/app-answer-test-page'])\n  }\n\n\n\n}\n","<div class=\"flex-container height\">\n\n  <table class=\"table table-bordered table-hover col-md-4 \">\n    <thead>\n      <tr>\n        <th scope=\"col\">N</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">ListTestQuestions</th>\n        <th scope=\"col\">ListTestAnswers</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users; index as i\">\n        <th scope=\"row\">{{i+1}}</th>\n\n        <td>{{user.full_name}}</td>\n        <td>{{user.id}}</td>\n        <td>\n          <div *ngFor=\"let u of user.listTestQuestions\"> {{u}}</div>\n        </td>\n        <td>\n          <!-- <div *ngFor=\"let j of user.listTestAnswers\">  -->\n          <!-- {{j.url}} -->\n          <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\" (click)=\"showImg(testBtn.value)\">\n            submit\n          </button>\n          <!-- </div> -->\n        </td>\n      </tr>\n\n    </tbody>\n  </table>\n</div>\n\n\n\n\n<!-- <div *ngFor=\"let i of user.listTestAnswers\"> {{i.url}}</div> -->","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { FileUpload } from '../components/models/file-upload';\nimport { ServerService } from './server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  _test = {};\n  answersIntern={};\n  error=\"\";\n  SelectTest={}; \n  \n  private basePath = '/uploads';\n  private basePath1 ='/upload-intrn';\n\n\n  constructor(private db: AngularFireDatabase, private storage: AngularFireStorage, private serverService: ServerService) { }\n  \n  \n  pushFileToStorage(fileUpload: any): Observable<number | undefined> {\n    const filePath = `${this.basePath}/${fileUpload.file.name}`;\n    const storageRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, fileUpload.file);\n\n\n    uploadTask.snapshotChanges().pipe(\n      finalize(() => {\n\n        storageRef.getDownloadURL().subscribe(downloadURL => {\n          console.log(\"url of download\", downloadURL);\n\n          fileUpload.url = downloadURL;\n          fileUpload.name = fileUpload.file.name;\n\n          this.saveFileData(fileUpload);\n          console.log(fileUpload.url);\n        });\n      })\n    ).subscribe(item => {\n      console.log(\"this is item\", item)\n      \n    });\n\n\n\n    return uploadTask.percentageChanges();\n  }\n\n  private saveFileData(fileUpload: FileUpload): void {\n    // this.db.list(this.basePath).push(fileUpload);\n    console.log( \"data from service\" );\n    \n\n      const data = { ...fileUpload, ...this._test };\n  console.log(data);\n\n    this.serverService.postWithToken(\"api/tests/createTest\", data).subscribe(data => {\n      console.log({ \"data from db\": data })\n\n    })\n  }\n\n  setUser(data: any): void {\n    this._test = data;\n  }\n\n  getFiles(numberItems: number): AngularFireList<FileUpload> {\n    console.log(\"getFiles\");\n\n    return this.db.list(this.basePath, ref =>\n      ref.limitToLast(numberItems));\n  }\n\n  deleteFile(fileUpload: any): void {\n    this.deleteFileDatabase(fileUpload.key)\n      .then(() => {\n        this.deleteFileStorage(fileUpload.name);\n      })\n      .catch(error => console.log(error));\n  }\n\n  private deleteFileDatabase(key: string): Promise<void> {\n    return this.db.list(this.basePath).remove(key);\n  }\n\n  private deleteFileStorage(name: string): void {\n    const storageRef = this.storage.ref(this.basePath);\n    storageRef.child(name).delete();\n  }\n\n\n  \n  \n  pushFileInternToStorage(fileUpload: any): Observable<number | undefined> {\n    const filePath = `${this.basePath1}/${fileUpload.file.name}`;\n    const storageRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, fileUpload.file);\n\n\n    uploadTask.snapshotChanges().pipe(\n      finalize(() => {\n\n        storageRef.getDownloadURL().subscribe(downloadURL => {\n          console.log(\"url of download\", downloadURL);\n\n          fileUpload.url = downloadURL;\n          fileUpload.name = fileUpload.file.name;\n          this.saveFileDataTest(fileUpload);\n         \n          console.log(fileUpload.url);\n        });\n      })\n    ).subscribe(item => {\n      console.log(\"this is item\", item)\n      \n    });\n\n\n\n    return uploadTask.percentageChanges();\n  }\n  \n  private saveFileDataTest(fileUpload: FileUpload): void {\n    console.log(\"save File work\");\n    console.log( fileUpload );\n     const fileUpload1={...fileUpload,...this.SelectTest}\n    this.answersIntern=fileUpload1;\n    const answerintern={ listTestAnswers: fileUpload1};\n    this.serverService.putWithToken(\"api/users/updateUser\", answerintern).subscribe(data => {\n    console.log({ \"data from db\": data })\n    }, err => {\n      this.error = err.error;\n    })\n    \n    \n    \n    \n    //  localStorage.setItem('urls', JSON.stringify(fileUpload)) \n  // let data = JSON.parse(  localStorage.getItem('urls'));\n  // console.log(typeof data,data);\n   }\n\n\n\n}\n\nexport function success_uplpad() {\n\n}\n\n\n\n\n\n//   const data = { ...fileUpload, ...this._test };\n  // console.log(data);\n\n  //   this.serverService.postWithToken(\"api/tests/createTest\", data).subscribe(data => {\n  //     console.log({ \"data from db\": data })\n\n  //   })\n\n\n\n\n\n\n\n\n\n\n\n\n  ","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { personModel } from '../components/models/person.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  baseUrl = 'http://nodejs:5000/';            \n  person: any;\n  token: any ;\n \n  // 'https://medical-bz.herokuapp.com/'; \n  \n  constructor(private http: HttpClient) { }\n\n  registerUser(a: personModel): Observable<any> {\n    return this.http.post(this.baseUrl + \"auth/create\", a);\n  }\n\n  updateDetails(updatepersonForm: personModel): Observable<Object> {\n   console.log(updatepersonForm)\n    return this.http.put(this.baseUrl + \"auth/updateDetails\" ,updatepersonForm);\n  \n  }\n\n  createToken(emailpassword:any): Observable<any>{\n    console.log(emailpassword);\n    return this.http.post(this.baseUrl +\"auth/login\",emailpassword)\n  }\n\n\n  post<T>(path: String, data: {}): Observable<T> {\n    return this.http.post<T>(this.baseUrl + path, data)\n  }\n\n  postWithToken<T>(path: String, data: {}, headers?: object): Observable<T> {\n    console.log(data)\n    console.log(this.token)\n    return this.http.post<T>(this.baseUrl + path, data, this.getOptions(headers))\n  \n  }\n \n \n \n  \n  getWithTokenArry<T>(path: String, headers?: object): Observable<T[]> {\n    return this.http.get<T[]>(this.baseUrl + path, this.getOptions(headers))\n  }\n  getWithToken<T>(path: String, headers?: object): Observable<T> {\n    return this.http.get<T>(this.baseUrl + path, this.getOptions(headers))\n  }\n \n  \n  deleteWithToken<T>(path: String,data:any, headers?: object): Observable<T> {\n    console.log(data)\n    return this.http.delete<T>(this.baseUrl + path + data._id, this.getOptions(headers))\n  }\n  \n  \n  \n  putWithToken<T>(path: String,data:{}, headers?: object): Observable<T> {\n    console.log(data)\n    return this.http.put<T>(this.baseUrl + path,data, this.getOptions(headers))\n  }\n\n\n  getOptions(headers?: any) {\n    headers = headers ? headers : {};\n    headers['content-type'] = 'application/json';\n    headers['x-access-token'] = localStorage.getItem('token');\n    console.log(headers);\n    \n    return {\n      headers: new HttpHeaders(headers)\n    }\n  }\n}\n  \n\n\n\n\n// postWithTokenArry<T>(path: String, headers?: object): Observable<T[]> {\n//   return this.http.post<T[]>(this.baseUrl + path,'', this.getOptions(headers))\n// }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hom',\n  templateUrl: './hom.component.html',\n  styleUrls: ['./hom.component.css']\n})\nexport class HomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"parallax\"></div>\n<div style=\"height:100px; background-color:aqua; font-size:36px\">\n    Interns and students welcome,\n</div>\n<div class=\"parallax1\"></div>\n<div style=\"height:100px; background-color: aquamarine; font-size:36px\">\n    The site offers many detailed exercises and solutions,\n\n</div>\n<div class=\"parallax2\"></div>\n<div style=\"height:150px; background-color: cadetblue; font-size:36px\">\n    And at the end also tests .... Enjoy!\n\n</div>\n\n<!-- <app-upload-details></app-upload-details>\n<app-upload-list></app-upload-list> -->\n<!-- \n\n<div class=\"container\" style=\"width:600px\">\n    <div>\n      <h3>bezkoder.com</h3>\n      \n    </div>\n  \n    <div class=\"my-3\">\n      <app-upload-form></app-upload-form>\n    </div>\n  \n    <div class=\"my-2\">\n      <app-upload-list></app-upload-list>\n    </div>\n  </div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { personModel } from '../models/person.model';\n\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css']\n})\nexport class ManagerComponent implements OnInit {\n\n  bool1: boolean = false;\n  bool2: boolean = false;\n  bool3: boolean = false;\n  managerFrom: any\n  errors: any = '';\n\n  users: any[] = [];\n \n  \n\n\n\n  constructor(private homeService: HomeService, private serverService:\n   ServerService,public fireBaseService:FireBaseService) { }\n\n  \n   ngOnInit(): void {\n    this.managerFrom = new FormGroup({\n      full_name: new FormControl('', [Validators.required]),\n      id: new FormControl(''),\n      password: new FormControl('', [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n    });\n  }\n  \n  sendForm() {\n    this.homeService.createUser(this.managerFrom.value).subscribe(p => {\n      this.homeService.setUser(p);\n    }, err => {\n      console.log('err', err);\n      if (err.error && err.error.code === 11000) {\n        // user exists\n        this.errors = \"User already exists\";\n        return;\n      }\n    }\n    );\n  }\n\n  findAllUsers() {\n    this.bool1 = !this.bool1;\n    this.serverService.getWithTokenArry(\"api/users/getAll\").subscribe(data => {\n      console.log(data)\n      this.users = data;\n    this.fireBaseService.allUsers=data;\n    console.log(this.fireBaseService.allUsers);\n    \n    })\n  }\n\n  editingTest() {\n    this.bool2 = !this.bool2;\n  }\n  \n  delete() { \n  this.bool3 = !this.bool3;\n  this.serverService.getWithTokenArry(\"api/users/getAll\").subscribe(data => {\n  this.fireBaseService.allUsers=data;\n  })\nthis.serverService.getWithTokenArry(\"api/tests/getAllTests\").subscribe(data => {\n  this.fireBaseService.allTests = data as [];\n   console.log(this.fireBaseService.allTests)\n   console.log('in get all test')\n })\n//   this.serverService.getWithToken('lll').subscribe(user=>console.log(user)\n//  )\n\n}\n\n\n\n}\n\n","<h1> Hi manager, please type the\n  Password,\n  and Email \n</h1>\n\n\n<form [formGroup]='managerFrom' (ngSubmit)='sendForm()'>\n\n  <div class=\"form-group b\">\n    <label>full_name</label>\n    <input formControlName='full_name' class=\"form-control\" placeholder=\"full_name\">\n  </div>\n  <div class=\"form-group b\">\n    <label>id</label>\n    <input formControlName='id' class=\"form-control\" placeholder=\"id\">\n  </div>\n  <div class=\"form-group b\">\n    <label>password</label>\n    <input formControlName='password' class=\"form-control\" placeholder=\"password\">\n  </div>\n  <div class=\"form-group b\">\n    <label>Email</label>\n    <input formControlName='email' class=\"form-control\" placeholder=\"email\">\n  </div>\n  <div class='error_messages'>{{errors}}</div>\n  <div class=\"form-group b\">\n    <button>NEXT</button>\n  </div>\n</form>\n\n                                                                                    \n<div class=\"col-auto b \">\n  <button (click)='findAllUsers()' type=\"submit\" class=\"btn btn-primary mb-3\">GET-ALL-USERS\n  </button>\n</div>\n<div class=\"col-auto b \">                                                                       \n  <button (click)='editingTest()' type=\"submit\" class=\"btn btn-primary mb-3\">EDITING-TEST\n  </button>\n</div>\n\n<div class=\"col-auto b \">\n  <button (click)='delete()' type=\"submit\" class=\"btn btn-primary mb-3\">DELETE-USERS/TESTS\n  </button>\n</div>\n\n\n<app-manager-users *ngIf=\"bool1\" [users]=\"users\"></app-manager-users>\n<app-upload-form  *ngIf=\"bool2\"></app-upload-form>\n <div class=\"container\">\n   <div class=\"row\">\n    \n    <app-manager-update-test *ngIf=\"bool3\"></app-manager-update-test>\n \n  </div>\n</div>\n<!-- <app-creat-test *ngIf=\"bool2\" ></app-creat-test> -->\n\n\n\n\n\n\n\n<!-- <div class=\"flex-container height\">\n   \n  <table class=\"table table-bordered table-hover col-md-4 \">\n      <thead>\n        <tr>\n          <th scope=\"col\">N</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Phone</th>\n        </tr>\n      </thead>\n      <tbody >\n        <tr *ngFor=\"let user of users; index as i\">\n          <th scope=\"row\">{{i+1}}</th>\n          \n          <td>{{user.name}}</td>\n          <td>{{user.id}}</td>\n          <td>{{user.phone}}</td>\n        </tr>\n       \n      </tbody>\n    </table>\n  </div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { FileUpload } from '../models/file-upload';\n\n@Component({\n  selector: 'app-upload-intern',\n  templateUrl: './upload-intern.component.html',\n  styleUrls: ['./upload-intern.component.css']\n})\nexport class UploadInternComponent implements OnInit {\n  SelectTest={\n    subject_of_the_test:\"\",\n    _id:\"\"\n  }\nselectedFiles: any = {};\ncurrentFileUpload: FileUpload = {};\npercentage: number = 0;\nsuccessMsg: boolean = false;\n\n\nconstructor(private uploadService: FileUploadService,public fireBaseService: FireBaseService,private serverService: ServerService) { \n  \n    \n}\n\n  ngOnInit(): void {\n    \n  }\n  \n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n  \n  selectTest(){\n    \n  }\n  \n  onSelect(){\n    for(let i of this.fireBaseService.allTests){      \n      if(i._id == this.SelectTest._id){\n        this.SelectTest.subject_of_the_test = i.subject_of_the_test;\n        break;\n      }\n    }\n    console.log(this.SelectTest);\n    this.uploadService.SelectTest=this.SelectTest;\n    \n  }\n  sendForm(){}\n  \n  upload(): void {\n    const file = this.selectedFiles.item(0);\n    this.selectedFiles = undefined;\n\n    this.currentFileUpload = new FileUpload(file);\n    this.uploadService.pushFileInternToStorage(this.currentFileUpload).subscribe(\n      percentage => {\n        this.percentage = Math.round(Number(percentage));\n        if (Number(percentage) === 100) {\n          this.successMsg = true;\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<label>Open the Test list\n    <select (change)='onSelect()' class=\"form-control\" class=\"form-select form-select-sm\" [(ngModel)]='SelectTest._id'\n        aria-label=\".form-select-sm example\">\n            <option *ngFor=\"let i of fireBaseService.allTests\" [value]=\"i._id\">{{i.subject_of_the_test}}</option>\n    </select>\n\n    \n    <button (click)='file.click()'>select file</button>\n    <input #file type=\"file\" class=\"text-nowrap text-truncate\" (change)=\"selectFile($event)\" hidden />\n</label>\n\n<button class=\"btn btn-success btn-sm\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n    Upload answers to the test\n</button>\n\n\n\n<div *ngIf=\"currentFileUpload\" class=\"progress mt-2\">\n    <div class=\"progress-bar progress-bar-info\" role=\"progressbar\" attr.aria-valuenow=\"{{ percentage }}\"\n        aria-valuemin=\"0\" aria-valuemax=\"100\" [ngStyle]=\"{ width: percentage + '%' }\">\n        {{ percentage }}%\n    </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['app-login1']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\n\n@Component({\n  selector: 'app-exam-results',\n  templateUrl: './exam-results.component.html',\n  styleUrls: ['./exam-results.component.css']\n})\nexport class ExamResultsComponent implements OnInit {\n  bool3:boolean =false;\n  mediocre: any;\n  bool1: boolean = false;\n\n  constructor(public fireBase: FireBaseService) { }\n  test(j) {\n    console.log(j);\n  }\n  ngOnInit(): void {\n  }\n  sendResult(index) {\n    this.bool1 = !this.bool1;\n    this.fireBase.correntResultIndex = index.value\n    console.log(\"\");\n\n  }\n  \n  average() {\n    this.bool3 = !this.bool3;\n    var sum = 0, i = 0;\n    for (; i < this.fireBase.internResult.listTestAnswers.length; i++) {\n      let score = this.fireBase.internResult.listTestAnswers[i].score;\n      if (score) {\n        sum += +score;\n        console.log(sum);\n\n      }\n    }\n\n    this.mediocre = sum / (i);\n\n  }\n\n}\n// for (let [key, value] of Object.entries(p)) {\n//   console.log(`${key}: ${value}`);\n// }\n\n\n// for (let [key, value] of Object.entries(this.fireBase.internResult.listTestAnswers.score)) {\n//   console.log(`${key}: ${value}`);\n// }","<body class=\"z\">\n  <div class=\"continer\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <div class=\"w\">\n          <div class=\"s\">\n            <h3>hi {{fireBase.internResult.full_name}},\n              <br>\n              <h5>It's your grades</h5>\n            </h3>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"s\">\n          <table class=\"table\" class=\"table table-success table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">YOUR PRACTISES/TESTS</th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">SEE RESULTS</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let u of fireBase.internResult.listTestAnswers;let i = index\">\n                <th scope=\"row\">{{i+1}}</th>\n                <td> {{u.subject_of_the_test}}</td>\n                <td\n                  [ngClass]=\"{'text-success':u.score &gt;=86,'text-warning':u.score  &lt;=85,'text-danger':u.score  &lt;79}\">\n                  <div class=\"box\">{{u.score}}</div>\n                </td>\n                <!-- &nbsp;&nbsp;&nbsp; -->\n\n                <td><button #resultBtn value=\"{{i}}\" class=\"btn btn-outline-secondary\"\n                    (click)=\"sendResult(resultBtn)\">seeResult</button></td>\n              </tr>\n              <tr>\n                <th scope=\"row\">2</th>\n                <td>Jacob</td>\n                <td>Thornton</td>\n                <td>@fat</td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"w\">\n          <div class=\"s\">\n            <div>\n              <button  class=\"btn btn-outline-secondary\" (click)=\"average()\">average</button>\n            </div>\n           \n            <div [ngClass]=\"{'text-success':mediocre &gt;=86,'text-warning':mediocre  &lt;=85,'text-danger':mediocre  &lt;79}\">\n              <div class=\"box2\">{{mediocre|number:'1.0-1'}}</div> \n            </div>\n            <br>\n            <br>\n            <app-test></app-test>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-see-result *ngIf=\"bool1\"></app-see-result>\n</body>\n\n<!-- <td><div class=\"box\"><div class=\"center\"[ngClass]=\"{'text-success':u.score &gt;=80,'text-danger':u.score  &lt;=70,'text-danger':u.score  &lt;=80}\" >{{u.score}}</div></div></td> -->\n\n\n<!-- <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\"\n(click)=\"sendTest(test.subject_of_the_test, testBtn)\">\nsubmit\n</button> -->\n\n\n<!-- <thead>\n    <tr>\n      <th scope=\"col\">N</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">ListTestQuestions</th>\n      <th scope=\"col\">ListTestAnswers</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of users; index as i\">\n      <th scope=\"row\">{{i+1}}</th>\n\n      <td>{{user.full_name}}</td>\n      <td>{{user.id}}</td>\n      <td>\n        <div *ngFor=\"let u of user.listTestQuestions\"> {{u}}</div>\n      </td>\n      <td>\n         <div *ngFor=\"let j of user.listTestAnswers\">  -->\n<!-- {{j.url}} -->\n<!-- <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\" (click)=\"showImg(testBtn.value)\">\n          submit -->\n<!-- </button> -->\n<!-- </div> -->\n<!-- </td>\n    </tr> --> -->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-client';\n}\n","<header class=\"container\">\n    <nav class=\"row\">\n        <div class=\"col\" [routerLink]='[\"/\"]'>Home</div>\n        <div class=\"col\" [routerLink]='[\"/sign-up\"]'>sign-up</div>\n        <div class=\"col\" [routerLink]='[\"/app-manager\"]'>manager</div>\n    </nav>\n</header>\n<app-login></app-login>\n\n<router-outlet></router-outlet>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-answer-test-page',\n  templateUrl: './answer-test-page.component.html',\n  styleUrls: ['./answer-test-page.component.css']\n})\nexport class AnswerTestPageComponent implements OnInit {\n  error: any;\n\n  test: {\n    _id: String,\n    score: Number | null,\n  }[] = []\n  constructor(public fireBase: FireBaseService, private serverService: ServerService) {\n    for(let i of  fireBase.allUsers[fireBase.currentAnswerTestIndex].listTestAnswers){\n      this.test.push({_id:i._id , score:null});\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateScore(index) {\n    const score = { _id: this.test[index]._id, score: this.test[index].score }\n    console.log(score);\n\n    this.serverService.putWithToken(\"api/users/updateScore\", score).subscribe(data => {\n      console.log({ \"data from db\": data })\n    this.average\n    }, err => {\n      this.error = err.error;\n    })\n  }\n  average() {\n    var sum = 0\n    for (var i = 1; i < this.fireBase.internResult.listTestAnswers.score.length; i++) {\n      sum += this.fireBase.internResult.listTestAnswers.score[i]\n    }\n    var mediocre = sum / i\n  }\n\n\n}\n// <div *ngFor='let item of fireBase.allUsers[fireBase.currentAnswerTestIndex].listTestAnswers'>\n\n//     <img  [src]=\"item.url\" alt=\"this is img\" style=\"width: 700px; height: 500px;\">\n// </div>\n// <br>\n","<body class=\"z\">\n    <figure *ngFor='let item of fireBase.allUsers[fireBase.currentAnswerTestIndex].listTestAnswers; index as i'>\n        <img [src]=\"item.url\" alt=\"this is img\" style=\"width: 700px; height: 500px;\" />\n        <figcaption>{{item.subject_of_the_test}}\n\n            <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n           <div class=\"s\"> <div class=\"row\">\n\n                <input [(ngModel)]=\"test[i].score\" type=\"score\" class=\"form-control col\" id=\"exampleDropdownFormEmail2\"\n                    placeholder=\"updateScore\">\n\n                <button (click)='updateScore(i)' type=\"submit\" class=\"btn btn-primary col\">sendTest</button>\n                <div class='error_messages'>{{error}}</div>\n            </div>\n        </div>\n        </figcaption>\n    </figure>\n</body>\n\n\n\n<!-- title=\"item.subject_of_the_test\" -->\n\n<!-- <figure>\n    <img src=\"img.jpg\" alt=\"my img\"/>\n    <figcaption> Your text </figcaption>\n  </figure\n\n\n<div *ngFor=\"let i of user.listTestAnswers\"> {{i.name}}</div> -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nc:number=0\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  loginUp():void{\n\nthis.router.navigate([\"/app-login1\"]); \n}\n\n\n}\n","<div class=\"b\"><h6>?Already have an account</h6><button (click)='loginUp()'>Log in</button></div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ServerService } from 'src/app/services/server.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-login1',\n  templateUrl: './login1.component.html',\n  styleUrls: ['./login1.component.css']\n})\nexport class Login1Component {\n  errors: any;\n  login = {\n    email: \"\",\n    password: \"\",\n  }\n  constructor(private serverService: ServerService, private tokenService: TokenService, private router: Router) { }\n\n  getlogin() {\n      this.serverService.createToken(this.login).subscribe(data => {\n        console.log(data)\n        if (data && data.token) this.tokenService.setUser(data);\n        localStorage.setItem(\"token\", data.token);\n        this.router.navigate([\"/app-practises\"]);\n      }, err => {\n        console.log('err', err);\n        if (err) {\n          // Incorrect password\n          this.errors = \"Incorrect password. Please try again!\";\n          return;\n        }\n      })\n  }\n\n}\n","<div class=\"x\">\n<h5>To access your account, please identify yourself by providing the information requested in the fields below, then click \"Login\"</h5>\n \n    <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"login.email\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"email@example.com\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormPassword2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"login.password\" type=\"password\" class=\"form-control\" id=\"exampleDropdownFormPassword2\" placeholder=\"Password\">\n    </div>\n    <div class=\"mb-3\">\n      <div class=\"form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck2\">\n        <label class=\"form-check-label\" for=\"dropdownCheck2\">\n          Remember me\n        </label>\n      </div>\n    </div>\n    <button (click)='getlogin()' type=\"submit\" class=\"btn btn-primary\">Login</button>\n    <div class='error_messages'>{{errors}}</div>\n</div>","export class FileUpload {\n    key?: string;\n    name?: string;\n    url?: string;\n    file?: File;\n  \n    constructor(file: File) {\n      this.file = file;\n    }\n  }","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { FileUpload } from '../models/file-upload';\n\n@Component({\n  selector: 'app-upload-form',\n  templateUrl: './upload-form.component.html',\n  styleUrls: ['./upload-form.component.css']\n})\nexport class UploadFormComponent implements OnInit {\n  @Input() bool2: boolean;\n  create = {\n    subject_of_the_test: \"\",\n    name_the_Lecturer: \"\",\n   \n  }\n  \n  selectedFiles: any = {};\n  currentFileUpload: FileUpload = {};\n  percentage: number = 0;\n  successMsg: boolean = false;\n  \n  constructor(private uploadService: FileUploadService,private serverService: ServerService) { }\n\n  ngOnInit(): void {\n  }\n\n  creatTest() {\n    this.uploadService.setUser(this.create)\n  }\n  \n  \n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n\n  \n\n  upload(): void {\n    const file = this.selectedFiles.item(0);\n    this.selectedFiles = undefined;\n\n    this.currentFileUpload = new FileUpload(file);\n    this.uploadService.pushFileToStorage(this.currentFileUpload).subscribe(\n      percentage => {\n        this.percentage = Math.round(Number(percentage));\n        if (Number(percentage) === 100) {\n          this.successMsg = true;\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n","\n<div *ngIf=\"successMsg\">מבחן עלה בהצלחה</div>\n<div class=\"x\">\n  <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"create.subject_of_the_test\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"subject_of_the_test\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"create.name_the_Lecturer\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\" name_the_Lecturer\">\n    </div>\n    <label>\n      <input\n        type=\"file\"\n        class=\"text-nowrap text-truncate\"\n        (change)=\"selectFile($event)\"\n      />\n    </label>\n    \n    <button\n      class=\"btn btn-success btn-sm\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"upload()\"\n      (click)='creatTest()'\n      >\n      Upload\n    </button>\n    \n        \n  \n    <div *ngIf=\"currentFileUpload\" class=\"progress mt-2\">\n      <div\n        class=\"progress-bar progress-bar-info\"\n        role=\"progressbar\"\n        attr.aria-valuenow=\"{{ percentage }}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        [ngStyle]=\"{ width: percentage + '%' }\"\n      >\n        {{ percentage }}%\n      </div>\n  \n  \n    </div>\n  \n\n <!-- <button (click)='creatTest()' type=\"submit\" class=\"btn btn-primary\">creatTest</button> -->\n  \n</div>\n\n\n\n\n\n\n<!-- <label>\n    <input\n      type=\"file\"\n      class=\"text-nowrap text-truncate\"\n      (change)=\"selectFile($event)\"\n    />\n  </label>\n  \n  <button\n    class=\"btn btn-success btn-sm\"\n    [disabled]=\"!selectedFiles\"\n    (click)=\"upload()\"\n  >\n    Upload\n  </button>\n  \n      <div *ngIf=\"successMsg\">מבחן עלה בהצלחה</div>\n\n  <div *ngIf=\"currentFileUpload\" class=\"progress mt-2\">\n    <div\n      class=\"progress-bar progress-bar-info\"\n      role=\"progressbar\"\n      attr.aria-valuenow=\"{{ percentage }}\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      [ngStyle]=\"{ width: percentage + '%' }\"\n    >\n      {{ percentage }}%\n    </div>\n\n\n  </div> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { environment } from '../environments/environment';\n\n\nimport {FormsModule,ReactiveFormsModule} from'@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SaleComponent } from './components/sale/sale.component';\nimport { HomComponent } from './components/hom/hom.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { SignResultComponent } from './components/sign-result/sign-result.component';\nimport { SignUp1Component } from './components/sign-up1/sign-up1.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { CodeComponent } from './components/code/code.component';\nimport { SignResult1Component } from './components/sign-result1/sign-result1.component';\nimport { SignResult2Component } from './components/sign-result2/sign-result2.component';\nimport { TestComponent } from './components/test/test.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { Login1Component } from './components/login1/login1.component';\nimport { PractisesComponent } from './components/practises/practises.component';\nimport { UploadFormComponent } from './components/upload-form/upload-form.component';\nimport { UploadListComponent } from './components/upload-list/upload-list.component';\nimport { UploadDetailsComponent } from './components/upload-details/upload-details.component';\nimport { ManagerComponent } from './components/manager/manager.component';\nimport { ManagerUsersComponent } from './components/manager-users/manager-users.component';\nimport { CreatTestComponent } from './components/creat-test/creat-test.component';\nimport { TestPageComponent } from './components/test-page/test-page.component';\nimport { UploadInternComponent } from './components/upload-intern/upload-intern.component';\nimport { ManagerUpdateTestComponent } from './components/manager-update-test/manager-update-test.component';\nimport {AuthGuardService} from './auth/auth-guard.service';\nimport { AnswerTestPageComponent } from './components/answer-test-page/answer-test-page.component';\nimport { ExamResultsComponent } from './components/exam-results/exam-results.component';\nimport { SeeResultComponent } from './components/see-result/see-result.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { AdminComponent } from './components/admin/admin.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SaleComponent,\n    HomComponent,\n    SignUpComponent,\n    SignResultComponent,\n    SignUp1Component,\n    LoginComponent,\n    CodeComponent,\n    SignResult1Component,\n    SignResult2Component,\n    TestComponent,\n    RegistrationComponent,\n    Login1Component,\n    PractisesComponent,\n    UploadFormComponent,\n    UploadListComponent,\n    UploadDetailsComponent,\n    ManagerComponent,\n    ManagerUsersComponent,\n    CreatTestComponent,\n    TestPageComponent,\n    UploadInternComponent,\n    ManagerUpdateTestComponent,\n    AnswerTestPageComponent,\n    ExamResultsComponent,\n    SeeResultComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgApexchartsModule\n  ],\n  providers: [AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-creat-test',\n  templateUrl: './creat-test.component.html',\n  styleUrls: ['./creat-test.component.css']\n})\nexport class CreatTestComponent implements OnInit {\n  @Input() bool2: boolean;\n  create = {\n    subject_of_the_test: \"\",\n    name_the_Lecturer: \"\"\n  }\n  constructor(private serverService: ServerService) { }\n\n  ngOnInit(): void {\n  }\n  creatTest() {\n    this.serverService.postWithToken(\"api/tests/createTest\", this.create).subscribe(data => {\n      console.log(data)\n\n    })\n  }\n}\n","<div class=\"x\">\n    <div class=\"mb-3\">\n        <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n        <input [(ngModel)]=\"create.subject_of_the_test\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"subject_of_the_test\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n        <input [(ngModel)]=\"create.name_the_Lecturer\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\" name_the_Lecturer\">\n      </div>\n      <!-- <div class=\"mb-3\">\n        <div class=\"form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck2\">\n          <label class=\"form-check-label\" for=\"dropdownCheck2\">\n            Remember me\n          </label>\n        </div>\n      </div> -->\n\n    <button (click)='creatTest()' type=\"submit\" class=\"btn btn-primary\">creatTest</button>\n    <app-upload-form></app-upload-form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  public chartOptions:any;\n  constructor(public fireBase: FireBaseService ) \n  { \n    this.chartOptions = {\n    series: [\n      {\n        name: \"Desktops\",\n        data: []\n      }\n    ],\n    chart: {\n      height: 350,\n      type: \"line\",\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    title: {\n      text: \"Product Trends by Month\",\n      align: \"left\"\n    },\n    grid: {\n      row: {\n        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.5\n      }\n    },\n    xaxis: {\n      categories: []\n    }\n  }; \n}\n\n  ngOnInit(): void {\n    for (var i=0; i < this.fireBase.internResult.listTestAnswers.length; i++) {\n      let score = this.fireBase.internResult.listTestAnswers[i].score;\n      this.chartOptions.series[0].data.push(score);\n    }\n    for (var i=0; i < this.fireBase.internResult.listTestAnswers.length; i++) {\n      let subject = this.fireBase.internResult.listTestAnswers[i].subject_of_the_test;\n      this.chartOptions.xaxis.categories.push(subject);\n    }\n  }\n  \n \n\n}\n\n\n\n","/* The content below is only a placeholder and can be replaced. */\n\n<div id=\"chart\">\n  <apx-chart\n    [series]=\"chartOptions.series\"\n    [chart]=\"chartOptions.chart\"\n    [xaxis]=\"chartOptions.xaxis\"\n    [dataLabels]=\"chartOptions.dataLabels\"\n    [grid]=\"chartOptions.grid\"\n    [stroke]=\"chartOptions.stroke\"\n    [title]=\"chartOptions.title\"\n  ></apx-chart>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { adminModel, personModel } from '../models/person.model';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\nadmin:any={\n  name:null,\n  Id:null,\npassword:null,\n}\n \nsupervisor:any={\n  name:\"\",\n  Id:\"\",\n  password:\"\"\n}\n\nconstructor(private router:ActivatedRoute) {\n  this.router.paramMap.subscribe(r=>this.admin.name=(r.get(\"name\")));\n  this.router.paramMap.subscribe(r=>this.admin.name=(r.get(\"Id\")));\n  this.router.paramMap.subscribe(r=>this.admin.name=(r.get(\"password\")));\n this.admin();\n}\n\n  ngOnInit(): void {\n  }\n\n  Admin(){\n    // this.homeService.createUser(this.personForm.value).subscribe(p => {\n    //   this.homeService.setUser(p);\n    //   // this.router.navigate([\"/app-code\"]);\n      \n    // }, err => {\n    //   console.log('err', err);\n    //     if(err.error && err.error.code === 11000) {\n    //       // user exists\n    //       this.errors = \"User already exists\";\n    //       return;\n    //     }\n    //   }\n    // );\n}\n\ncreatSuperviser(){\n  \n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\n\n@Component({\n  selector: 'app-test-page',\n  templateUrl: './test-page.component.html',\n  styleUrls: ['./test-page.component.css']\n})\nexport class TestPageComponent implements OnInit {\n\n  \n  constructor(public fireBase: FireBaseService) {\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"{{fireBase.allTests[fireBase.currentTestIndex].url}}\" alt=\"this is img\" style=\"width: 1000px; height: 800px;\">\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\nimport { FileUpload } from '../models/file-upload';\n@Component({\n  selector: 'app-upload-details',\n  templateUrl: './upload-details.component.html',\n  styleUrls: ['./upload-details.component.css']\n})\nexport class UploadDetailsComponent implements OnInit {\n  @Input() fileUpload: FileUpload;\n  constructor(private uploadService: FileUploadService) { }\n\n  ngOnInit(): void {\n  }\n  deleteFileUpload(fileUpload): void {\n    this.uploadService.deleteFile(fileUpload);\n  }\n \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  user: any;\n  registr: any\n  errors: any = '';\n  constructor(private homeService: HomeService, private serverService: ServerService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n    this.registr = new FormGroup({\n      password: new FormControl('', [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n    });\n\n  }\n  sendForm() {\n    const obj: any = {}\n    for (const field in this.registr.controls) {\n      obj[field] = this.registr.controls[field].value;\n    }\n    console.log(obj)\n\n\n    const data = { ...this.user, ...obj }\n\n    this.serverService.updateDetails(data).subscribe(res => {\n      this.homeService.setUser(data);\n      this.router.navigate([\"/app-code\"]);\n    }, err => {\n      console.log('err', err);\n        if(err.error && err.error.code === 11000) {\n          // email exists\n          this.errors = \"Email already exists\";\n          return;\n        }\n      \n    });\n    console.log(data)\n  }\n\n}\n","\n<h1> Hi, {{user.full_name}} please type the \n   Password,\n    and Email </h1>\n\n<form [formGroup]='registr' (ngSubmit)='sendForm()'>\n\n    <div class=\"form-group b\">\n      <label >password</label>\n      <input formControlName='password' class=\"form-control\"  placeholder=\"password\">\n    </div>\n  <div class=\"form-group b\">\n      <label >Email</label>\n      <input formControlName='email' class=\"form-control\"  placeholder=\"email\">\n    </div>\n    <div class='error_messages'>{{errors}}</div>\n    <div class=\"form-group b\">\n      <button >NEXT</button>\n      <button >NEXT</button>\n    </div>\n  </form>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n\n@Component({\n  selector: 'app-sign-result2',\n  templateUrl: './sign-result2.component.html',\n  styleUrls: ['./sign-result2.component.css']\n})\nexport class SignResult2Component implements OnInit {\n  updatedcompletepersonForm: any;\n  updatepersonForm: any;\n  user: any;\n  roleNumber=100;\n\n\n  constructor(private serverService: ServerService, private homeService: HomeService,private router:Router) { }\n\n  ngOnInit(): void {\n\n    this.user = this.homeService.getUser();\n    console.log(this.user)\n    this.updatepersonForm = new FormGroup(  {\n      country: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      academic: new FormControl('', [Validators.required]),\n      age: new FormControl(0, [Validators.required, Validators.min(1), Validators.max(120)]),\n      year: new FormControl(0, [Validators.required, Validators.min(2020), Validators.max(2030)]),\n    });\n  }\n\n  sendForm() {\n    const obj: any = {};\n    for (const field in this.updatepersonForm.controls) { // 'field' is a string\n      obj[field] = this.updatepersonForm.controls[field].value,this.roleNumber;\n      console.log(obj)\n      this.router.navigate([\"/app-login1\"]); \n    }\n\n    const data = { roleNumber : this.roleNumber ,...this.user, ...obj, };\n\n    this.serverService.updateDetails(data).subscribe(res => {\n      this.homeService.setUser(data);\n    }, err => {\n      console.log(err);\n\n    });\n    console.log(data)\n\n  }\n\n}\n","<body class=\"z\">\n \n<p class=\"text-success ml-1\">personal details</p>\n<h1 class=\"mb-4\">please tell us about yourself, personally</h1>\n<form class= \"row g-3\" [formGroup]='updatepersonForm' (ngSubmit)='sendForm()'>\n\n  <div class=\"col-md-4 mb-2\">\n    <label >year</label>\n    <input formControlName='year' class=\"form-control\"  placeholder=\"year\">\n  </div>\n<div class=\"col-md-4 mb-2 \">\n    <label >age</label>\n    <input formControlName='age' class=\"form-control\"  placeholder=\"age\">\n  </div>\n \n  <div class=\"col-md-4 mb-2\">\n  <label for = \"country\"class= \"form-label\">Country </label>\n  <select id = \"country\" formControlName='country'name=\"country\" class=\"form-control\">\n    <option selected>Country</option>\n    <option value=\"Israel\">Israel</option>\n    <option value=\"Britain\">Britain</option>\n    <option value=\"France\">France</option>\n  </select>\n</div>\n\n<div class=\"col-md-4 mb-2\">\n  <label for = \"City\"class= \"form-label\">City </label>\n  <select id = \"City\" formControlName='city' name=\"city\" class=\"form-control\"  placeholder=\"City\"  >\n    <option selected>City</option>\n    <option value=\"jerusalem\">jerusalem</option>\n    <option value=\"London\">London</option>\n    <option value=\"Paris\">Paris</option>\n  </select>\n</div>\n  \n<div class=\"col-md-4 mb-2\">\n  <label for = \"academic\"class= \"form-label\">academic institution </label>\n  <select id = \"academic\" formControlName='academic' name=\"academic\" class=\"form-control\">\n    <option selected>Academic institution</option>\n    <option value=\"hadasa\">hadasa</option>\n    <option value=\"soroka\">soroka</option>\n    <option value=\"rambam\">rambam</option>\n  </select>\n</div>\n  \n<div class=\"form-group b\">\n    <button >NEXT</button>\n  </div>\n</form>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-manager-update-test',\n  templateUrl: './manager-update-test.component.html',\n  styleUrls: ['./manager-update-test.component.css']\n})\nexport class ManagerUpdateTestComponent implements OnInit {\n  error:any\n \n  selectUser={\n    full_name:\"\",\n    _id:\"\"\n  }\n  \n  // updateTestForm: FormGroup\n\n  // arr = [60,70,80,85,90,95,100];\n\n\n  constructor(public fireBaseService: FireBaseService,private serverService: ServerService) {\n    \n  }\n\n  ngOnInit(): void {\n\n    // this.updateTestForm = new FormGroup({\n    //   users: new FormControl('', [Validators.required]),\n    //   tests: new FormControl('', [Validators.required]),\n    //   urls: new FormControl('', [Validators.required]),\n    //   score: new FormControl(0, [Validators.required, Validators.min(0), Validators.max(100)]),\n    // });\n  }\n  sendForm() { }\n  sendTest() { }\n  \n  \n  onSelect(){\n    for(let i of this.fireBaseService.allUsers){      \n      if(i._id == this.selectUser._id){\n        this.selectUser.full_name = i.full_name;\n        break;\n      }\n    }\n    console.log(this.selectUser.full_name);\n    \n    \n    this.serverService.deleteWithToken(\"api/users/deleteUser/\", this.selectUser).subscribe(data => {\n   \n      console.log({ \"data from db\": data })\n    }, err => {\n      this.error = err.error;\n    })\n  }\n}\n\n\n\n\n\n  ","<!-- <select formControlName='users' class=\"form-control\" class=\"form-select form-select-sm\"\n    aria-label=\".form-select-sm example\">\n    <option selected>Open the Test list</option>\n    <option *ngFor=\"let i of fireBaseService.allUsers\" value={{i._id}}>{{i.full_name}}</option>\n</select> -->\n\n<div class=\"continer\">\n  <div class=\"row\">\n\n    <select   class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      [(ngModel)]='selectUser._id' aria-label=\".form-select-sm example\">\n      <option selected>Open the Users list</option>\n      <option *ngFor=\"let i of fireBaseService.allUsers\" [value]=\"i._id\">{{i.full_name}}</option>\n     \n      <div class='error_messages'>{{error}}</div>\n    </select>\n     <button (click)='onSelect()' type=\"submit\" class=\"btn btn-primary\">DELETE-USER</button> \n\n    <!-- (change)='onSelect()' -->\n    <!-- <select formControlName='tests' class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      aria-label=\".form-select-sm example\">\n      <option selected>Open the Test list</option>\n      <option *ngFor=\"let i of fireBaseService.allTests\" value=\"i._id\">{{i.subject_of_the_test}}</option>\n    </select>\n\n\n\n\n    <select formControlName='urls' class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      aria-label=\".form-select-sm example\">\n      <option selected>Open the all Answers </option>\n      <option *ngFor=\"let user of fireBaseService.allUsers\" value=\"i._id\">\n        <div *ngFor=\"let i of user.listTestAnswers\"> {{i.url}}</div>\n      </option>\n    </select>\n\n    <select formControlName='score' class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      aria-label=\".form-select-sm example\">\n      <option selected>Select a score</option>\n      <option *ngFor=\"let i of arr\">{{i}}</option>\n    </select> -->\n\n  </div>\n</div>\n\n\n\n\n\n<!-- <select (change)='onSelect()' class=\"form-control\" class=\"form-select form-select-sm\" [(ngModel)]='SelectTest._id'\n        aria-label=\".form-select-sm example\">\n    \n        \n        <option *ngFor=\"let i of fireBaseService.allTests\" [value]=\"i._id\">{{i.subject_of_the_test}}</option>\n    </select -->\n\n\n\n\n\n\n<!-- <button>create test after score</button> -->\n\n<!-- <div class=\"col-auto  \">\n  <button  (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">all details\n         </button> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-up1',\n  templateUrl: './sign-up1.component.html',\n  styleUrls: ['./sign-up1.component.css']\n})\nexport class SignUp1Component implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n    \n}\n\n","<h4>The password is incorrect</h4>\n\n ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { personModel } from 'src/app/components/models/person.model';\n\n@Component({\n  selector: 'app-sign-result',\n  templateUrl: './sign-result.component.html',\n  styleUrls: ['./sign-result.component.css']\n})\nexport class SignResultComponent implements OnInit {\n  user:any;\n  persons: personModel[] = [];\n  \n  constructor(private homeService: HomeService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n  }\n\n  check(){\nthis.router.navigate([\"/app-sign-result1\"]);\n    }\n}\n","<div class=\"a\">\n    <h1>{{user.full_name}}</h1>\n   <div>please look straight at the <br> camera so we can spot you </div>\n<div></div>\n<div></div>\n   <h6>You will automatically be taken to the next step as<br> soon as you take a picture</h6>\n   <div class=\"col-auto\">\n    <button  (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">CONTINUE</button>\n</div>\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { personModel } from '../components/models/person.model';\nimport { ServerService } from './server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  name:any;\n  // private person: BehaviorSubject<personModel[]>;\n\n  private _person = {};\n  \n  constructor(private serverService: ServerService) {\n    // this.person = new BehaviorSubject<personModel[]>(this._person);\n  }\n\n\n  getUser() {\n    return this._person;\n  }\n\n  setUser(data: any): void {\n    this._person = data;\n  }\n\n  createUser(a: personModel) {\n    return this.serverService.registerUser(a);\n  }\n\n  // set_name(name:personModel){\n  //   this.name=name\n  // }\n\n\n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\n\n@Component({\n  selector: 'app-upload-list',\n  templateUrl: './upload-list.component.html',\n  styleUrls: ['./upload-list.component.css']\n})\nexport class UploadListComponent implements OnInit {\n  fileUploads: any[];\n  constructor(private uploadService: FileUploadService) { }\n\n  ngOnInit(): void {\n    // console.log(\"reached oninint of upload-list\");\n    \n    // this.uploadService.getFiles(6).snapshotChanges().pipe(\n    //   map(changes =>\n    //     // store the key\n        \n    //     changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n    //   )\n    // ).subscribe(fileUploads => {\n    //   this.fileUploads = fileUploads;\n    //   console.log(\"fileUploads\", this.fileUploads);\n      \n    // });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n// import { JwtHelperService } from '@auth0/angular-jwt';\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    //  public jwtHelper: JwtHelperService\n    ) {}\n  // ...\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    // Check whether the token is expired and return\n    // true or false\n    // return !this.jwtHelper.isTokenExpired(token);\n    return !!token;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-practises',\n  templateUrl: './practises.component.html',\n  styleUrls: ['./practises.component.css']\n})\nexport class PractisesComponent implements OnInit {\n\n  isLoading: Boolean = true;\n  error: String = \"\";\n  errors: String = \"\";\n\n  constructor(private serverService: ServerService,\n    public fireBase: FireBaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAllTests()\n  }\n\n  getAllTests() {\n    this.serverService.getWithTokenArry(\"api/tests/getAllTests\").subscribe(data => {\n      this.fireBase.allTests = data as [];\n      this.isLoading = false;\n    })\n  }\n\n  showImg(index) {\n    this.fireBase.currentTestIndex = index;\n    console.log('kjbdsvjkbvdsjkbdsvjkbjkvds');\n\n    this.router.navigate(['/test-page'])\n  }\n\n  sendTest(data: any, testBtn: any) {\n    const test = { listTestQuestions: data };\n    this.serverService.putWithToken(\"api/users/updateUser\", test).subscribe(data => {\n      this.showImg(testBtn.value)\n      console.log({ \"data from db\": data })\n    }, err => {\n      this.error = err.error;\n    })\n  }\n\n  examResults() {\n    this.serverService. getWithToken(\"api/users/getUser\").subscribe(data => {\n      this.fireBase.internResult = data\n      console.log({ \"data from db\": data })\n    }, err => {\n      console.error(err);\n      this.errors = err;\n    })\n  this.router.navigate(['/app-exam-results'])\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <div>\n                <div class=\"s\">\n                    <app-upload-intern></app-upload-intern>\n                </div>\n\n\n            </div>\n        </div>\n        <div class=\"col-8\">\n            <div>\n                <div class=\"s\">\n                    <div class=\"flex-container height\">\n                        <div *ngIf=\"isLoading\">Tests are loading, Please wait</div>\n                            <table *ngIf=\"!isLoading\" class=\"table table-bordered table-hover col-md-1\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\"></th>\n                                    <th scope=\"col\">Test subject</th>\n                                    <th scope=\"col\">Lecturer name</th>\n                                    <th scope=\"col\">Download test</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let test of fireBase.allTests; let i = index\">\n                                    <th scope=\"row\">{{i+1}}</th>\n\n                                    <td>{{test.subject_of_the_test}}</td>\n                                    <td>{{test.name_the_Lecturer}}</td>\n                                    <td>\n                                        <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\"\n                                            (click)=\"sendTest(test.subject_of_the_test, testBtn)\">\n                                            submit\n                                        </button>\n                                        <div *ngIf=\"error\">{{error}}</div>\n                                    </td>\n                                </tr>\n                               \n                            </tbody>\n                           \n                        </table>\n                        <div class=\"text-center\">\n                            <button (click)=\"examResults()\"  class=\"btn btn-primary col-7 col-md-5\">Exam results</button>\n                        </div>\n                        </div>\n                </div>\n            \n            </div>\n        </div>\n        <div class=\"col-2\">\n            <div>\n                <div class=\"s\"> xxxx</div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- <div style=\"text-align: center; clear: both\">\n  <div class=\"text-center\"> <button class=\"btn\">Exam results</button></div> \n</div> -->","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  user: any = {};\n\n \n  constructor() { }\n\nsetUser(datalogin:any){\n// localStorage=datalogin\n  this.user=datalogin\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  users_id: any;\n  personForm: any;\n  dataObj: any = [];\n  phoneArr: Array<any> = ['972', '050', '11'];\n  errors: any = '';\n\n  constructor(private homeService: HomeService,\n    private serverService: ServerService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.personForm = new FormGroup({\n      full_name: new FormControl('', [Validators.required]),\n      id: new FormControl(''),\n      passport: new FormControl(''),\n      phonenumber: new FormControl(''),\n      password: new FormControl(''),\n      email: new FormControl(''),\n    \n    });\n\n    this.dataObj = [{\n      name: 'ID Number',\n      formControlName: 'id'\n    },\n    {\n      name: 'Full Name',\n      formControlName: 'full_name'\n    },\n    {\n      name: 'Passport',\n      formControlName: 'passport'\n    },\n    {\n      name: 'Phone Number',\n      formControlName: 'phonenumber',\n      type: 'inputWithDropdown',\n      arr: this.phoneArr\n    },\n    {\n      name: 'password',\n      formControlName: 'password'\n    },\n    {\n      name: 'email',\n      formControlName: 'email'\n    },\n  ]\n  }\n\n  sendForm() {\n    console.log(this.personForm.value.name);\n    \n    \n    \n    this.homeService.createUser(this.personForm.value).subscribe(p => {\n      this.homeService.setUser(p);\n      this.router.navigate([\"/app-code\"]);\n      \n    }, err => {\n      console.log('err', err);\n        if(err.error && err.error.code === 11000) {\n          // user exists\n          this.errors = \"User already exists\";\n          return;\n        }\n      }\n    );\n  }\n}\n","<div class=\"c\">\n  <h2>Welcome,Intern </h2>\n  <h6>please fill in the following </h6>\n  <form [formGroup]=\"personForm\" (ngSubmit)='sendForm()' class='row'>\n\n    <div *ngFor=\"let data of dataObj\" class=\"form-group col-md-{{data.width || 4 }}\">\n      <label>{{data.name}}</label>\n      \n      <input *ngIf=\"!data.type\" formControlName={{data.formControlName}} class=\"form-control\" \n      placeholder=\"Please enter {{data.name}}\">\n\n      <input *ngIf=\"data.type === 'number'\" \n      type=\"number\"\n      formControlName={{data.formControlName}} class=\"form-control\" \n      placeholder=\"Please enter {{data.name}}\">\n\n\n      <div *ngIf=\"data.type === 'inputWithDropdown'\" class=\"input-group mb-3\">\n        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</button>\n        <ul class=\"dropdown-menu\">\n          <li *ngFor=\"let num of data.arr\">\n            <a class=\"dropdown-item\" href=\"#\">{{num}}</a>\n          </li>\n        </ul>\n        <input type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\"\n        placeholder=\"Please enter {{data.name}}\">\n      </div>\n   </div>\n\n   <h6>A verification code will be send to you to this number</h6>\n    <div class=\"form-group\">\n      <button [disabled]='!personForm.valid'>CONTINUE</button>\n    </div>\n\n    <div class='error_messages'>{{errors}}</div>\n  </form>\n</div>\n<!-- <div><button  >CONTINUE</button></div> -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CodeComponent } from './components/code/code.component';\nimport { HomComponent } from './components/hom/hom.component';\nimport { Login1Component } from './components/login1/login1.component';\nimport { ManagerComponent } from './components/manager/manager.component';\nimport { PractisesComponent } from './components/practises/practises.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { SignResultComponent } from './components/sign-result/sign-result.component';\nimport { SignResult1Component } from './components/sign-result1/sign-result1.component';\nimport { SignResult2Component } from './components/sign-result2/sign-result2.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { TestPageComponent } from './components/test-page/test-page.component';\nimport { TestComponent } from './components/test/test.component';\nimport { CanActivate } from '@angular/router';\nimport { \n  AuthGuardService as AuthGuard \n} from './auth/auth-guard.service';\nimport { AnswerTestPageComponent } from './components/answer-test-page/answer-test-page.component';\nimport { ExamResultsComponent } from './components/exam-results/exam-results.component';\n\n\n\n\nconst routes: Routes = [ \n  {path:'',component:HomComponent}, \n  {path:'sign-up',component:SignUpComponent},\n  {path:'app-registration',component:RegistrationComponent},\n  {path:'sign-result',component:SignResultComponent},\n  {path:'app-code',component:CodeComponent},\n  {path:'app-sign-result1',component:SignResult1Component},\n  {path:'app-sign-result2',component:SignResult2Component},\n  {path:'app-test',component:TestComponent},\n  {path:'app-login1',component:Login1Component},\n  {path:'app-manager',component:ManagerComponent, canActivate: [AuthGuard]},\n  {path:'app-practises',component:PractisesComponent, canActivate: [AuthGuard]},\n  {path:'test-page',component:TestPageComponent},\n  {path:'app-answer-test-page',component:AnswerTestPageComponent},\n  {path:'app-exam-results',component:ExamResultsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireBaseService {\n  internResult= null\n  allUsers=[];\n  allTests = [];\n  correntResultIndex=null;\n  currentTestIndex = null; \n  currentAnswerTestIndex=null;\n  \n  \n  constructor() { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\n\n@Component({\n  selector: 'app-see-result',\n  templateUrl: './see-result.component.html',\n  styleUrls: ['./see-result.component.css']\n})\nexport class SeeResultComponent implements OnInit {\n\n  constructor(public fireBase: FireBaseService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<img src=\"{{fireBase.internResult.listTestAnswers[fireBase.correntResultIndex].url}}\" alt=\"this is img\" style=\"width: 1000px; height: 800px;\">\n\n\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}