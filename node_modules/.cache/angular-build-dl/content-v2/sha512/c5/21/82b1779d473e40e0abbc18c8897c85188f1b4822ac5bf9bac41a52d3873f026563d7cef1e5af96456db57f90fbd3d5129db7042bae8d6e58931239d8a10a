{"version":3,"sources":["webpack:///src/app/components/sale/sale.component.ts","webpack:///src/app/components/sale/sale.component.html","webpack:///src/app/components/sign-result1/sign-result1.component.ts","webpack:///src/app/components/sign-result1/sign-result1.component.html","webpack:///src/app/components/code/code.component.ts","webpack:///src/app/components/code/code.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/manager-users/manager-users.component.ts","webpack:///src/app/components/manager-users/manager-users.component.html","webpack:///src/app/services/file-upload.service.ts","webpack:///src/app/services/server.service.ts","webpack:///src/app/components/hom/hom.component.ts","webpack:///src/app/components/hom/hom.component.html","webpack:///src/app/components/manager/manager.component.ts","webpack:///src/app/components/manager/manager.component.html","webpack:///src/app/components/upload-intern/upload-intern.component.ts","webpack:///src/app/components/upload-intern/upload-intern.component.html","webpack:///src/app/auth/auth-guard.service.ts","webpack:///src/app/components/exam-results/exam-results.component.ts","webpack:///src/app/components/exam-results/exam-results.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/answer-test-page/answer-test-page.component.ts","webpack:///src/app/components/answer-test-page/answer-test-page.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login1/login1.component.ts","webpack:///src/app/components/login1/login1.component.html","webpack:///src/app/components/models/file-upload.ts","webpack:///src/app/components/upload-form/upload-form.component.ts","webpack:///src/app/components/upload-form/upload-form.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/creat-test/creat-test.component.ts","webpack:///src/app/components/creat-test/creat-test.component.html","webpack:///src/app/components/test/test.component.ts","webpack:///src/app/components/test/test.component.html","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/test-page/test-page.component.ts","webpack:///src/app/components/test-page/test-page.component.html","webpack:///src/app/components/upload-details/upload-details.component.ts","webpack:///src/app/components/registration/registration.component.ts","webpack:///src/app/components/registration/registration.component.html","webpack:///src/app/components/sign-result2/sign-result2.component.ts","webpack:///src/app/components/sign-result2/sign-result2.component.html","webpack:///src/app/components/manager-update-test/manager-update-test.component.ts","webpack:///src/app/components/manager-update-test/manager-update-test.component.html","webpack:///src/app/components/sign-up1/sign-up1.component.ts","webpack:///src/app/components/sign-up1/sign-up1.component.html","webpack:///src/app/components/sign-result/sign-result.component.ts","webpack:///src/app/components/sign-result/sign-result.component.html","webpack:///src/app/services/home.service.ts","webpack:///src/app/components/upload-list/upload-list.component.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/components/practises/practises.component.ts","webpack:///src/app/components/practises/practises.component.html","webpack:///src/app/services/token.service.ts","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/fire-base.service.ts","webpack:///src/main.ts","webpack:///src/app/components/see-result/see-result.component.ts","webpack:///src/app/components/see-result/see-result.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SaleComponent","header","i","onuzerClick","selector","templateUrl","styleUrls","SignResult1Component","router","homeService","serverService","user","getUser","navigate","CodeComponent","Password","number","smsCode","c","console","log","check","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ManagerUsersComponent","fireBase","index","currentAnswerTestIndex","users","FileUploadService","db","storage","_test","answersIntern","error","SelectTest","basePath","basePath1","fileUpload","filePath","file","name","storageRef","ref","uploadTask","upload","snapshotChanges","pipe","getDownloadURL","subscribe","downloadURL","url","saveFileData","item","percentageChanges","data","postWithToken","numberItems","list","limitToLast","deleteFileDatabase","key","then","deleteFileStorage","remove","child","saveFileDataTest","fileUpload1","answerintern","listTestAnswers","putWithToken","err","providedIn","success_uplpad","ServerService","http","baseUrl","a","post","updatepersonForm","put","emailpassword","path","headers","token","getOptions","get","_id","localStorage","getItem","HomComponent","ManagerComponent","fireBaseService","bool1","bool2","bool3","errors","managerFrom","full_name","required","id","password","email","createUser","value","p","setUser","code","getWithTokenArry","allUsers","allTests","sendForm","findAllUsers","editingTest","UploadInternComponent","uploadService","subject_of_the_test","selectedFiles","currentFileUpload","percentage","successMsg","event","target","files","undefined","pushFileInternToStorage","Math","round","Number","onSelect","selectFile","AuthGuardService","auth","isAuthenticated","ExamResultsComponent","j","correntResultIndex","sum","internResult","length","score","mediocre","average","AppComponent","title","AnswerTestPageComponent","test","push","LoginComponent","loginUp","Login1Component","tokenService","login","createToken","setItem","getlogin","FileUpload","UploadFormComponent","create","name_the_Lecturer","pushFileToStorage","creatTest","AppModule","initializeApp","declarations","imports","providers","bootstrap","CreatTestComponent","TestComponent","chartOptions","series","chart","height","type","zoom","enabled","dataLabels","stroke","curve","text","align","grid","row","colors","opacity","xaxis","categories","subject","AdminComponent","admin","Id","supervisor","paramMap","r","TestPageComponent","UploadDetailsComponent","deleteFile","RegistrationComponent","registr","obj","field","controls","updateDetails","res","SignResult2Component","roleNumber","country","city","academic","age","min","max","year","ManagerUpdateTestComponent","selectUser","deleteWithToken","SignUp1Component","SignResultComponent","persons","HomeService","_person","registerUser","UploadListComponent","AuthService","PractisesComponent","isLoading","getAllTests","currentTestIndex","testBtn","listTestQuestions","showImg","getWithToken","examResults","TokenService","datalogin","formControlName","SignUpComponent","dataObj","phoneArr","personForm","passport","phonenumber","arr","routes","component","canActivate","AppRoutingModule","forRoot","exports","FireBaseService","bootstrapModule","SeeResultComponent","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sale',\n  templateUrl: './sale.component.html',\n  styleUrls: ['./sale.component.css']\n})\nexport class SaleComponent implements OnInit {\n  header:string\n  i:number;\n  \n  constructor() {\n    this.header=\"hello\"\n    this.i=1\n   }\n\n  ngOnInit(): void {\n  }\n  onuzerClick() :void {\n      this.header=\"you clicked\"+this. i++\n\n    }\n}\n","{{header}}\n{{i}}\n<button (click)=\"onuzerClick()\">click my</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { personModel } from 'src/app/components/models/person.model';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-sign-result1',\n  templateUrl: './sign-result1.component.html',\n  styleUrls: ['./sign-result1.component.css']\n})\nexport class SignResult1Component implements OnInit {\n  user: any = {};\n\n  constructor(private router: Router, private homeService: HomeService, private serverService: ServerService) { }\n\n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n  }\n\n  check() {\n    this.router.navigate([\"/app-sign-result2\"]);\n  }\n}\n\n\n","<div class=\"c\">\n       <ng-container *ngIf=\"user.full_name\">\n              <div class=\"row\">\n                     <h1> Thank you, {{user.full_name}}</h1>\n                     <span>\n                            <i class=\"bi bi-check2\"></i> Your user has been successfully creaed\n                     </span>\n\n                     <div>\n                            <h3>in order to fit the simulator you need to have a short questionnaire</h3>\n                     </div>\n\n                     <div class=\"col-auto\">\n                            <button (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">LET\"S START</button>\n                     </div>\n                     <div class=\"z\"> {{user.full_name}}</div>\n              </div>\n       </ng-container>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from 'src/app/services/home.service';\nimport { personModel } from 'src/app/components/models/person.model';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-code',\n  templateUrl: './code.component.html',\n  styleUrls: ['./code.component.css']\n})\nexport class CodeComponent implements OnInit {\n  user: any;\n  Password  = {\n    number: null\n  };\n  smsCode: number = 1234;\n  c: number = 0;\n  \n  constructor(private homeService: HomeService,private router:Router) { }\n  \n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n  }\n\n  check() {\n    console.log(this.Password.number);\n\n    if (this.Password.number == this.smsCode) {\n      console.log('c=1');\n      \n      this.router.navigate([\"/sign-result\"]);\n    }\n    else {\n     this.c = 2;\n    }\n\n  }\n}\n","<div class=\"a\">\n       <span>\n              <h1> Hi, {{user.full_name}} please type the \n              mobile verification\n              code you received</h1>\n       </span>\n       <!-- <form class=\"row g-3\"> -->\n       \n              <div class=\"col-auto b\">\n                     <label for=\"inputPassword2\" class=\"visually-hidden\">Password</label>\n                     <input [(ngModel)]=\"Password.number\" type=\"password\" class=\"form-control\" id=\"inputPassword2\"\n                            placeholder=\"Password\">\n              </div>\n              <div class=\"col-auto b \">\n                     <button  (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">Confirm\n                            identity</button>\n              </div>\n       <!-- </form> -->\n       <h1>i did not receive, resend</h1>\n</div>\n\n<app-sign-up1 *ngIf=\"c==2\"></app-sign-up1>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDFwzpRP8pOax7ySEaWbIj50rqxx_qtFDs\",\n    authDomain: \"my-project-97a17.firebaseapp.com\",\n    databaseURL: \"https://my-project-97a17-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"my-project-97a17\",\n    storageBucket: \"my-project-97a17.appspot.com\",\n    messagingSenderId: \"932111491086\",\n    appId: \"1:932111491086:web:2c4e87f6ab3fa1adc95c5f\",\n    measurementId: \"G-90JH88E5X2\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { personModel } from '../models/person.model';\n\n@Component({\n  selector: 'app-manager-users',\n  templateUrl: './manager-users.component.html',\n  styleUrls: ['./manager-users.component.css']\n})\nexport class ManagerUsersComponent implements OnInit {\n@Input()users:any[];\nbuttDisble:boolean\n  constructor(public fireBase: FireBaseService,private router:Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  showImg(index) {\n    this.fireBase.currentAnswerTestIndex = index;\n    console.log(index);\n\n    this.router.navigate(['/app-answer-test-page'])\n  }\n\n\n\n}\n","<div class=\"flex-container height\">\n\n  <table class=\"table table-bordered table-hover col-md-4 \">\n    <thead>\n      <tr>\n        <th scope=\"col\">N</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">ListTestQuestions</th>\n        <th scope=\"col\">ListTestAnswers</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users; index as i\">\n        <th scope=\"row\">{{i+1}}</th>\n\n        <td>{{user.full_name}}</td>\n        <td>{{user.id}}</td>\n        <td>\n          <div *ngFor=\"let u of user.listTestQuestions\"> {{u}}</div>\n        </td>\n        <td>\n          <!-- <div *ngFor=\"let j of user.listTestAnswers\">  -->\n          <!-- {{j.url}} -->\n          <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\" (click)=\"showImg(testBtn.value)\">\n            submit\n          </button>\n          <!-- </div> -->\n        </td>\n      </tr>\n\n    </tbody>\n  </table>\n</div>\n\n\n\n\n<!-- <div *ngFor=\"let i of user.listTestAnswers\"> {{i.url}}</div> -->","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { FileUpload } from '../components/models/file-upload';\nimport { ServerService } from './server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  _test = {};\n  answersIntern={};\n  error=\"\";\n  SelectTest={}; \n  \n  private basePath = '/uploads';\n  private basePath1 ='/upload-intrn';\n\n\n  constructor(private db: AngularFireDatabase, private storage: AngularFireStorage, private serverService: ServerService) { }\n  \n  \n  pushFileToStorage(fileUpload: any): Observable<number | undefined> {\n    const filePath = `${this.basePath}/${fileUpload.file.name}`;\n    const storageRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, fileUpload.file);\n\n\n    uploadTask.snapshotChanges().pipe(\n      finalize(() => {\n\n        storageRef.getDownloadURL().subscribe(downloadURL => {\n          console.log(\"url of download\", downloadURL);\n\n          fileUpload.url = downloadURL;\n          fileUpload.name = fileUpload.file.name;\n\n          this.saveFileData(fileUpload);\n          console.log(fileUpload.url);\n        });\n      })\n    ).subscribe(item => {\n      console.log(\"this is item\", item)\n      \n    });\n\n\n\n    return uploadTask.percentageChanges();\n  }\n\n  private saveFileData(fileUpload: FileUpload): void {\n    // this.db.list(this.basePath).push(fileUpload);\n    console.log( \"data from service\" );\n    \n\n      const data = { ...fileUpload, ...this._test };\n  console.log(data);\n\n    this.serverService.postWithToken(\"api/tests/createTest\", data).subscribe(data => {\n      console.log({ \"data from db\": data })\n\n    })\n  }\n\n  setUser(data: any): void {\n    this._test = data;\n  }\n\n  getFiles(numberItems: number): AngularFireList<FileUpload> {\n    console.log(\"getFiles\");\n\n    return this.db.list(this.basePath, ref =>\n      ref.limitToLast(numberItems));\n  }\n\n  deleteFile(fileUpload: any): void {\n    this.deleteFileDatabase(fileUpload.key)\n      .then(() => {\n        this.deleteFileStorage(fileUpload.name);\n      })\n      .catch(error => console.log(error));\n  }\n\n  private deleteFileDatabase(key: string): Promise<void> {\n    return this.db.list(this.basePath).remove(key);\n  }\n\n  private deleteFileStorage(name: string): void {\n    const storageRef = this.storage.ref(this.basePath);\n    storageRef.child(name).delete();\n  }\n\n\n  \n  \n  pushFileInternToStorage(fileUpload: any): Observable<number | undefined> {\n    const filePath = `${this.basePath1}/${fileUpload.file.name}`;\n    const storageRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, fileUpload.file);\n\n\n    uploadTask.snapshotChanges().pipe(\n      finalize(() => {\n\n        storageRef.getDownloadURL().subscribe(downloadURL => {\n          console.log(\"url of download\", downloadURL);\n\n          fileUpload.url = downloadURL;\n          fileUpload.name = fileUpload.file.name;\n          this.saveFileDataTest(fileUpload);\n         \n          console.log(fileUpload.url);\n        });\n      })\n    ).subscribe(item => {\n      console.log(\"this is item\", item)\n      \n    });\n\n\n\n    return uploadTask.percentageChanges();\n  }\n  \n  private saveFileDataTest(fileUpload: FileUpload): void {\n    console.log(\"save File work\");\n    console.log( fileUpload );\n     const fileUpload1={...fileUpload,...this.SelectTest}\n    this.answersIntern=fileUpload1;\n    const answerintern={ listTestAnswers: fileUpload1};\n    this.serverService.putWithToken(\"api/users/updateUser\", answerintern).subscribe(data => {\n    console.log({ \"data from db\": data })\n    }, err => {\n      this.error = err.error;\n    })\n    \n    \n    \n    \n    //  localStorage.setItem('urls', JSON.stringify(fileUpload)) \n  // let data = JSON.parse(  localStorage.getItem('urls'));\n  // console.log(typeof data,data);\n   }\n\n\n\n}\n\nexport function success_uplpad() {\n\n}\n\n\n\n\n\n//   const data = { ...fileUpload, ...this._test };\n  // console.log(data);\n\n  //   this.serverService.postWithToken(\"api/tests/createTest\", data).subscribe(data => {\n  //     console.log({ \"data from db\": data })\n\n  //   })\n\n\n\n\n\n\n\n\n\n\n\n\n  ","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { personModel } from '../components/models/person.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  baseUrl = 'http://nodejs:5000/';            \n  person: any;\n  token: any ;\n \n  // 'https://medical-bz.herokuapp.com/'; \n  \n  constructor(private http: HttpClient) { }\n\n  registerUser(a: personModel): Observable<any> {\n    return this.http.post(this.baseUrl + \"auth/create\", a);\n  }\n\n  updateDetails(updatepersonForm: personModel): Observable<Object> {\n   console.log(updatepersonForm)\n    return this.http.put(this.baseUrl + \"auth/updateDetails\" ,updatepersonForm);\n  \n  }\n\n  createToken(emailpassword:any): Observable<any>{\n    console.log(emailpassword);\n    return this.http.post(this.baseUrl +\"auth/login\",emailpassword)\n  }\n\n\n  post<T>(path: String, data: {}): Observable<T> {\n    return this.http.post<T>(this.baseUrl + path, data)\n  }\n\n  postWithToken<T>(path: String, data: {}, headers?: object): Observable<T> {\n    console.log(data)\n    console.log(this.token)\n    return this.http.post<T>(this.baseUrl + path, data, this.getOptions(headers))\n  \n  }\n \n \n \n  \n  getWithTokenArry<T>(path: String, headers?: object): Observable<T[]> {\n    return this.http.get<T[]>(this.baseUrl + path, this.getOptions(headers))\n  }\n  getWithToken<T>(path: String, headers?: object): Observable<T> {\n    return this.http.get<T>(this.baseUrl + path, this.getOptions(headers))\n  }\n \n  \n  deleteWithToken<T>(path: String,data:any, headers?: object): Observable<T> {\n    console.log(data)\n    return this.http.delete<T>(this.baseUrl + path + data._id, this.getOptions(headers))\n  }\n  \n  \n  \n  putWithToken<T>(path: String,data:{}, headers?: object): Observable<T> {\n    console.log(data)\n    return this.http.put<T>(this.baseUrl + path,data, this.getOptions(headers))\n  }\n\n\n  getOptions(headers?: any) {\n    headers = headers ? headers : {};\n    headers['content-type'] = 'application/json';\n    headers['x-access-token'] = localStorage.getItem('token');\n    console.log(headers);\n    \n    return {\n      headers: new HttpHeaders(headers)\n    }\n  }\n}\n  \n\n\n\n\n// postWithTokenArry<T>(path: String, headers?: object): Observable<T[]> {\n//   return this.http.post<T[]>(this.baseUrl + path,'', this.getOptions(headers))\n// }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hom',\n  templateUrl: './hom.component.html',\n  styleUrls: ['./hom.component.css']\n})\nexport class HomComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"parallax\"></div>\n<div style=\"height:100px; background-color:aqua; font-size:36px\">\n    Interns and students welcome,\n</div>\n<div class=\"parallax1\"></div>\n<div style=\"height:100px; background-color: aquamarine; font-size:36px\">\n    The site offers many detailed exercises and solutions,\n\n</div>\n<div class=\"parallax2\"></div>\n<div style=\"height:150px; background-color: cadetblue; font-size:36px\">\n    And at the end also tests .... Enjoy!\n\n</div>\n\n<!-- <app-upload-details></app-upload-details>\n<app-upload-list></app-upload-list> -->\n<!-- \n\n<div class=\"container\" style=\"width:600px\">\n    <div>\n      <h3>bezkoder.com</h3>\n      \n    </div>\n  \n    <div class=\"my-3\">\n      <app-upload-form></app-upload-form>\n    </div>\n  \n    <div class=\"my-2\">\n      <app-upload-list></app-upload-list>\n    </div>\n  </div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { personModel } from '../models/person.model';\n\n@Component({\n  selector: 'app-manager',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css']\n})\nexport class ManagerComponent implements OnInit {\n\n  bool1: boolean = false;\n  bool2: boolean = false;\n  bool3: boolean = false;\n  managerFrom: any\n  errors: any = '';\n\n  users: any[] = [];\n \n  \n\n\n\n  constructor(private homeService: HomeService, private serverService:\n   ServerService,public fireBaseService:FireBaseService) { }\n\n  \n   ngOnInit(): void {\n    this.managerFrom = new FormGroup({\n      full_name: new FormControl('', [Validators.required]),\n      id: new FormControl(''),\n      password: new FormControl('', [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n    });\n  }\n  \n  sendForm() {\n    this.homeService.createUser(this.managerFrom.value).subscribe(p => {\n      this.homeService.setUser(p);\n    }, err => {\n      console.log('err', err);\n      if (err.error && err.error.code === 11000) {\n        // user exists\n        this.errors = \"User already exists\";\n        return;\n      }\n    }\n    );\n  }\n\n  findAllUsers() {\n    this.bool1 = !this.bool1;\n    this.serverService.getWithTokenArry(\"api/users/getAll\").subscribe(data => {\n      console.log(data)\n      this.users = data;\n    this.fireBaseService.allUsers=data;\n    console.log(this.fireBaseService.allUsers);\n    \n    })\n  }\n\n  editingTest() {\n    this.bool2 = !this.bool2;\n  }\n  \n  delete() { \n  this.bool3 = !this.bool3;\n  this.serverService.getWithTokenArry(\"api/users/getAll\").subscribe(data => {\n  this.fireBaseService.allUsers=data;\n  })\nthis.serverService.getWithTokenArry(\"api/tests/getAllTests\").subscribe(data => {\n  this.fireBaseService.allTests = data as [];\n   console.log(this.fireBaseService.allTests)\n   console.log('in get all test')\n })\n//   this.serverService.getWithToken('lll').subscribe(user=>console.log(user)\n//  )\n\n}\n\n\n\n}\n\n","<h1> Hi manager, please type the\n  Password,\n  and Email \n</h1>\n\n\n<form [formGroup]='managerFrom' (ngSubmit)='sendForm()'>\n\n  <div class=\"form-group b\">\n    <label>full_name</label>\n    <input formControlName='full_name' class=\"form-control\" placeholder=\"full_name\">\n  </div>\n  <div class=\"form-group b\">\n    <label>id</label>\n    <input formControlName='id' class=\"form-control\" placeholder=\"id\">\n  </div>\n  <div class=\"form-group b\">\n    <label>password</label>\n    <input formControlName='password' class=\"form-control\" placeholder=\"password\">\n  </div>\n  <div class=\"form-group b\">\n    <label>Email</label>\n    <input formControlName='email' class=\"form-control\" placeholder=\"email\">\n  </div>\n  <div class='error_messages'>{{errors}}</div>\n  <div class=\"form-group b\">\n    <button>NEXT</button>\n  </div>\n</form>\n\n                                                                                    \n<div class=\"col-auto b \">\n  <button (click)='findAllUsers()' type=\"submit\" class=\"btn btn-primary mb-3\">GET-ALL-USERS\n  </button>\n</div>\n<div class=\"col-auto b \">                                                                       \n  <button (click)='editingTest()' type=\"submit\" class=\"btn btn-primary mb-3\">EDITING-TEST\n  </button>\n</div>\n\n<div class=\"col-auto b \">\n  <button (click)='delete()' type=\"submit\" class=\"btn btn-primary mb-3\">DELETE-USERS/TESTS\n  </button>\n</div>\n\n\n<app-manager-users *ngIf=\"bool1\" [users]=\"users\"></app-manager-users>\n<app-upload-form  *ngIf=\"bool2\"></app-upload-form>\n <div class=\"container\">\n   <div class=\"row\">\n    \n    <app-manager-update-test *ngIf=\"bool3\"></app-manager-update-test>\n \n  </div>\n</div>\n<!-- <app-creat-test *ngIf=\"bool2\" ></app-creat-test> -->\n\n\n\n\n\n\n\n<!-- <div class=\"flex-container height\">\n   \n  <table class=\"table table-bordered table-hover col-md-4 \">\n      <thead>\n        <tr>\n          <th scope=\"col\">N</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">Phone</th>\n        </tr>\n      </thead>\n      <tbody >\n        <tr *ngFor=\"let user of users; index as i\">\n          <th scope=\"row\">{{i+1}}</th>\n          \n          <td>{{user.name}}</td>\n          <td>{{user.id}}</td>\n          <td>{{user.phone}}</td>\n        </tr>\n       \n      </tbody>\n    </table>\n  </div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { FileUpload } from '../models/file-upload';\n\n@Component({\n  selector: 'app-upload-intern',\n  templateUrl: './upload-intern.component.html',\n  styleUrls: ['./upload-intern.component.css']\n})\nexport class UploadInternComponent implements OnInit {\n  SelectTest={\n    subject_of_the_test:\"\",\n    _id:\"\"\n  }\nselectedFiles: any = {};\ncurrentFileUpload: FileUpload = {};\npercentage: number = 0;\nsuccessMsg: boolean = false;\n\n\nconstructor(private uploadService: FileUploadService,public fireBaseService: FireBaseService,private serverService: ServerService) { \n  \n    \n}\n\n  ngOnInit(): void {\n    \n  }\n  \n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n  \n  selectTest(){\n    \n  }\n  \n  onSelect(){\n    for(let i of this.fireBaseService.allTests){      \n      if(i._id == this.SelectTest._id){\n        this.SelectTest.subject_of_the_test = i.subject_of_the_test;\n        break;\n      }\n    }\n    console.log(this.SelectTest);\n    this.uploadService.SelectTest=this.SelectTest;\n    \n  }\n  sendForm(){}\n  \n  upload(): void {\n    const file = this.selectedFiles.item(0);\n    this.selectedFiles = undefined;\n\n    this.currentFileUpload = new FileUpload(file);\n    this.uploadService.pushFileInternToStorage(this.currentFileUpload).subscribe(\n      percentage => {\n        this.percentage = Math.round(Number(percentage));\n        if (Number(percentage) === 100) {\n          this.successMsg = true;\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<label>Open the Test list\n    <select (change)='onSelect()' class=\"form-control\" class=\"form-select form-select-sm\" [(ngModel)]='SelectTest._id'\n        aria-label=\".form-select-sm example\">\n            <option *ngFor=\"let i of fireBaseService.allTests\" [value]=\"i._id\">{{i.subject_of_the_test}}</option>\n    </select>\n\n    \n    <button (click)='file.click()'>select file</button>\n    <input #file type=\"file\" class=\"text-nowrap text-truncate\" (change)=\"selectFile($event)\" hidden />\n</label>\n\n<button class=\"btn btn-success btn-sm\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n    Upload answers to the test\n</button>\n\n\n\n<div *ngIf=\"currentFileUpload\" class=\"progress mt-2\">\n    <div class=\"progress-bar progress-bar-info\" role=\"progressbar\" attr.aria-valuenow=\"{{ percentage }}\"\n        aria-valuemin=\"0\" aria-valuemax=\"100\" [ngStyle]=\"{ width: percentage + '%' }\">\n        {{ percentage }}%\n    </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['app-login1']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\n\n@Component({\n  selector: 'app-exam-results',\n  templateUrl: './exam-results.component.html',\n  styleUrls: ['./exam-results.component.css']\n})\nexport class ExamResultsComponent implements OnInit {\n  bool3:boolean =false;\n  mediocre: any;\n  bool1: boolean = false;\n\n  constructor(public fireBase: FireBaseService) { }\n  test(j) {\n    console.log(j);\n  }\n  ngOnInit(): void {\n  }\n  sendResult(index) {\n    this.bool1 = !this.bool1;\n    this.fireBase.correntResultIndex = index.value\n    console.log(\"\");\n\n  }\n  \n  average() {\n    this.bool3 = !this.bool3;\n    var sum = 0, i = 0;\n    for (; i < this.fireBase.internResult.listTestAnswers.length; i++) {\n      let score = this.fireBase.internResult.listTestAnswers[i].score;\n      if (score) {\n        sum += +score;\n        console.log(sum);\n\n      }\n    }\n\n    this.mediocre = sum / (i);\n\n  }\n\n}\n// for (let [key, value] of Object.entries(p)) {\n//   console.log(`${key}: ${value}`);\n// }\n\n\n// for (let [key, value] of Object.entries(this.fireBase.internResult.listTestAnswers.score)) {\n//   console.log(`${key}: ${value}`);\n// }","<body class=\"z\">\n  <div class=\"continer\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <div class=\"w\">\n          <div class=\"s\">\n            <h3>hi {{fireBase.internResult.full_name}},\n              <br>\n              <h5>It's your grades</h5>\n            </h3>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"s\">\n          <table class=\"table\" class=\"table table-success table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">YOUR PRACTISES/TESTS</th>\n                <th scope=\"col\"></th>\n                <th scope=\"col\">SEE RESULTS</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let u of fireBase.internResult.listTestAnswers;let i = index\">\n                <th scope=\"row\">{{i+1}}</th>\n                <td> {{u.subject_of_the_test}}</td>\n                <td\n                  [ngClass]=\"{'text-success':u.score &gt;=86,'text-warning':u.score  &lt;=85,'text-danger':u.score  &lt;79}\">\n                  <div class=\"box\">{{u.score}}</div>\n                </td>\n                <!-- &nbsp;&nbsp;&nbsp; -->\n\n                <td><button #resultBtn value=\"{{i}}\" class=\"btn btn-outline-secondary\"\n                    (click)=\"sendResult(resultBtn)\">seeResult</button></td>\n              </tr>\n              <tr>\n                <th scope=\"row\">2</th>\n                <td>Jacob</td>\n                <td>Thornton</td>\n                <td>@fat</td>\n              </tr>\n\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"w\">\n          <div class=\"s\">\n            <div>\n              <button  class=\"btn btn-outline-secondary\" (click)=\"average()\">average</button>\n            </div>\n           \n            <div [ngClass]=\"{'text-success':mediocre &gt;=86,'text-warning':mediocre  &lt;=85,'text-danger':mediocre  &lt;79}\">\n              <div class=\"box2\">{{mediocre|number:'1.0-1'}}</div> \n            </div>\n            <br>\n            <br>\n            <app-test></app-test>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-see-result *ngIf=\"bool1\"></app-see-result>\n</body>\n\n<!-- <td><div class=\"box\"><div class=\"center\"[ngClass]=\"{'text-success':u.score &gt;=80,'text-danger':u.score  &lt;=70,'text-danger':u.score  &lt;=80}\" >{{u.score}}</div></div></td> -->\n\n\n<!-- <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\"\n(click)=\"sendTest(test.subject_of_the_test, testBtn)\">\nsubmit\n</button> -->\n\n\n<!-- <thead>\n    <tr>\n      <th scope=\"col\">N</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">ListTestQuestions</th>\n      <th scope=\"col\">ListTestAnswers</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of users; index as i\">\n      <th scope=\"row\">{{i+1}}</th>\n\n      <td>{{user.full_name}}</td>\n      <td>{{user.id}}</td>\n      <td>\n        <div *ngFor=\"let u of user.listTestQuestions\"> {{u}}</div>\n      </td>\n      <td>\n         <div *ngFor=\"let j of user.listTestAnswers\">  -->\n<!-- {{j.url}} -->\n<!-- <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\" (click)=\"showImg(testBtn.value)\">\n          submit -->\n<!-- </button> -->\n<!-- </div> -->\n<!-- </td>\n    </tr> --> -->","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-client';\n}\n","<header class=\"container\">\n    <nav class=\"row\">\n        <div class=\"col\" [routerLink]='[\"/\"]'>Home</div>\n        <div class=\"col\" [routerLink]='[\"/sign-up\"]'>sign-up</div>\n        <div class=\"col\" [routerLink]='[\"/app-manager\"]'>manager</div>\n    </nav>\n</header>\n<app-login></app-login>\n\n<router-outlet></router-outlet>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-answer-test-page',\n  templateUrl: './answer-test-page.component.html',\n  styleUrls: ['./answer-test-page.component.css']\n})\nexport class AnswerTestPageComponent implements OnInit {\n  error: any;\n\n  test: {\n    _id: String,\n    score: Number | null,\n  }[] = []\n  constructor(public fireBase: FireBaseService, private serverService: ServerService) {\n    for(let i of  fireBase.allUsers[fireBase.currentAnswerTestIndex].listTestAnswers){\n      this.test.push({_id:i._id , score:null});\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  updateScore(index) {\n    const score = { _id: this.test[index]._id, score: this.test[index].score }\n    console.log(score);\n\n    this.serverService.putWithToken(\"api/users/updateScore\", score).subscribe(data => {\n      console.log({ \"data from db\": data })\n    this.average\n    }, err => {\n      this.error = err.error;\n    })\n  }\n  average() {\n    var sum = 0\n    for (var i = 1; i < this.fireBase.internResult.listTestAnswers.score.length; i++) {\n      sum += this.fireBase.internResult.listTestAnswers.score[i]\n    }\n    var mediocre = sum / i\n  }\n\n\n}\n// <div *ngFor='let item of fireBase.allUsers[fireBase.currentAnswerTestIndex].listTestAnswers'>\n\n//     <img  [src]=\"item.url\" alt=\"this is img\" style=\"width: 700px; height: 500px;\">\n// </div>\n// <br>\n","<body class=\"z\">\n    <figure *ngFor='let item of fireBase.allUsers[fireBase.currentAnswerTestIndex].listTestAnswers; index as i'>\n        <img [src]=\"item.url\" alt=\"this is img\" style=\"width: 700px; height: 500px;\" />\n        <figcaption>{{item.subject_of_the_test}}\n\n            <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n           <div class=\"s\"> <div class=\"row\">\n\n                <input [(ngModel)]=\"test[i].score\" type=\"score\" class=\"form-control col\" id=\"exampleDropdownFormEmail2\"\n                    placeholder=\"updateScore\">\n\n                <button (click)='updateScore(i)' type=\"submit\" class=\"btn btn-primary col\">sendTest</button>\n                <div class='error_messages'>{{error}}</div>\n            </div>\n        </div>\n        </figcaption>\n    </figure>\n</body>\n\n\n\n<!-- title=\"item.subject_of_the_test\" -->\n\n<!-- <figure>\n    <img src=\"img.jpg\" alt=\"my img\"/>\n    <figcaption> Your text </figcaption>\n  </figure\n\n\n<div *ngFor=\"let i of user.listTestAnswers\"> {{i.name}}</div> -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nc:number=0\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  \n  loginUp():void{\n\nthis.router.navigate([\"/app-login1\"]); \n}\n\n\n}\n","<div class=\"b\"><h6>?Already have an account</h6><button (click)='loginUp()'>Log in</button></div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ServerService } from 'src/app/services/server.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-login1',\n  templateUrl: './login1.component.html',\n  styleUrls: ['./login1.component.css']\n})\nexport class Login1Component {\n  errors: any;\n  login = {\n    email: \"\",\n    password: \"\",\n  }\n  constructor(private serverService: ServerService, private tokenService: TokenService, private router: Router) { }\n\n  getlogin() {\n      this.serverService.createToken(this.login).subscribe(data => {\n        console.log(data)\n        if (data && data.token) this.tokenService.setUser(data);\n        localStorage.setItem(\"token\", data.token);\n        this.router.navigate([\"/app-practises\"]);\n      }, err => {\n        console.log('err', err);\n        if (err) {\n          // Incorrect password\n          this.errors = \"Incorrect password. Please try again!\";\n          return;\n        }\n      })\n  }\n\n}\n","<div class=\"x\">\n<h5>To access your account, please identify yourself by providing the information requested in the fields below, then click \"Login\"</h5>\n \n    <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"login.email\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"email@example.com\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormPassword2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"login.password\" type=\"password\" class=\"form-control\" id=\"exampleDropdownFormPassword2\" placeholder=\"Password\">\n    </div>\n    <div class=\"mb-3\">\n      <div class=\"form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck2\">\n        <label class=\"form-check-label\" for=\"dropdownCheck2\">\n          Remember me\n        </label>\n      </div>\n    </div>\n    <button (click)='getlogin()' type=\"submit\" class=\"btn btn-primary\">Login</button>\n    <div class='error_messages'>{{errors}}</div>\n</div>","export class FileUpload {\n    key?: string;\n    name?: string;\n    url?: string;\n    file?: File;\n  \n    constructor(file: File) {\n      this.file = file;\n    }\n  }","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\nimport { ServerService } from 'src/app/services/server.service';\nimport { FileUpload } from '../models/file-upload';\n\n@Component({\n  selector: 'app-upload-form',\n  templateUrl: './upload-form.component.html',\n  styleUrls: ['./upload-form.component.css']\n})\nexport class UploadFormComponent implements OnInit {\n  @Input() bool2: boolean;\n  create = {\n    subject_of_the_test: \"\",\n    name_the_Lecturer: \"\",\n   \n  }\n  \n  selectedFiles: any = {};\n  currentFileUpload: FileUpload = {};\n  percentage: number = 0;\n  successMsg: boolean = false;\n  \n  constructor(private uploadService: FileUploadService,private serverService: ServerService) { }\n\n  ngOnInit(): void {\n  }\n\n  creatTest() {\n    this.uploadService.setUser(this.create)\n  }\n  \n  \n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n\n  \n\n  upload(): void {\n    const file = this.selectedFiles.item(0);\n    this.selectedFiles = undefined;\n\n    this.currentFileUpload = new FileUpload(file);\n    this.uploadService.pushFileToStorage(this.currentFileUpload).subscribe(\n      percentage => {\n        this.percentage = Math.round(Number(percentage));\n        if (Number(percentage) === 100) {\n          this.successMsg = true;\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n}\n","\n<div *ngIf=\"successMsg\">מבחן עלה בהצלחה</div>\n<div class=\"x\">\n  <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"create.subject_of_the_test\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"subject_of_the_test\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n      <input [(ngModel)]=\"create.name_the_Lecturer\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\" name_the_Lecturer\">\n    </div>\n    <label>\n      <input\n        type=\"file\"\n        class=\"text-nowrap text-truncate\"\n        (change)=\"selectFile($event)\"\n      />\n    </label>\n    \n    <button\n      class=\"btn btn-success btn-sm\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"upload()\"\n      (click)='creatTest()'\n      >\n      Upload\n    </button>\n    \n        \n  \n    <div *ngIf=\"currentFileUpload\" class=\"progress mt-2\">\n      <div\n        class=\"progress-bar progress-bar-info\"\n        role=\"progressbar\"\n        attr.aria-valuenow=\"{{ percentage }}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        [ngStyle]=\"{ width: percentage + '%' }\"\n      >\n        {{ percentage }}%\n      </div>\n  \n  \n    </div>\n  \n\n <!-- <button (click)='creatTest()' type=\"submit\" class=\"btn btn-primary\">creatTest</button> -->\n  \n</div>\n\n\n\n\n\n\n<!-- <label>\n    <input\n      type=\"file\"\n      class=\"text-nowrap text-truncate\"\n      (change)=\"selectFile($event)\"\n    />\n  </label>\n  \n  <button\n    class=\"btn btn-success btn-sm\"\n    [disabled]=\"!selectedFiles\"\n    (click)=\"upload()\"\n  >\n    Upload\n  </button>\n  \n      <div *ngIf=\"successMsg\">מבחן עלה בהצלחה</div>\n\n  <div *ngIf=\"currentFileUpload\" class=\"progress mt-2\">\n    <div\n      class=\"progress-bar progress-bar-info\"\n      role=\"progressbar\"\n      attr.aria-valuenow=\"{{ percentage }}\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      [ngStyle]=\"{ width: percentage + '%' }\"\n    >\n      {{ percentage }}%\n    </div>\n\n\n  </div> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { environment } from '../environments/environment';\n\n\nimport {FormsModule,ReactiveFormsModule} from'@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SaleComponent } from './components/sale/sale.component';\nimport { HomComponent } from './components/hom/hom.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { SignResultComponent } from './components/sign-result/sign-result.component';\nimport { SignUp1Component } from './components/sign-up1/sign-up1.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { CodeComponent } from './components/code/code.component';\nimport { SignResult1Component } from './components/sign-result1/sign-result1.component';\nimport { SignResult2Component } from './components/sign-result2/sign-result2.component';\nimport { TestComponent } from './components/test/test.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { Login1Component } from './components/login1/login1.component';\nimport { PractisesComponent } from './components/practises/practises.component';\nimport { UploadFormComponent } from './components/upload-form/upload-form.component';\nimport { UploadListComponent } from './components/upload-list/upload-list.component';\nimport { UploadDetailsComponent } from './components/upload-details/upload-details.component';\nimport { ManagerComponent } from './components/manager/manager.component';\nimport { ManagerUsersComponent } from './components/manager-users/manager-users.component';\nimport { CreatTestComponent } from './components/creat-test/creat-test.component';\nimport { TestPageComponent } from './components/test-page/test-page.component';\nimport { UploadInternComponent } from './components/upload-intern/upload-intern.component';\nimport { ManagerUpdateTestComponent } from './components/manager-update-test/manager-update-test.component';\nimport {AuthGuardService} from './auth/auth-guard.service';\nimport { AnswerTestPageComponent } from './components/answer-test-page/answer-test-page.component';\nimport { ExamResultsComponent } from './components/exam-results/exam-results.component';\nimport { SeeResultComponent } from './components/see-result/see-result.component';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { AdminComponent } from './components/admin/admin.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SaleComponent,\n    HomComponent,\n    SignUpComponent,\n    SignResultComponent,\n    SignUp1Component,\n    LoginComponent,\n    CodeComponent,\n    SignResult1Component,\n    SignResult2Component,\n    TestComponent,\n    RegistrationComponent,\n    Login1Component,\n    PractisesComponent,\n    UploadFormComponent,\n    UploadListComponent,\n    UploadDetailsComponent,\n    ManagerComponent,\n    ManagerUsersComponent,\n    CreatTestComponent,\n    TestPageComponent,\n    UploadInternComponent,\n    ManagerUpdateTestComponent,\n    AnswerTestPageComponent,\n    ExamResultsComponent,\n    SeeResultComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgApexchartsModule\n  ],\n  providers: [AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-creat-test',\n  templateUrl: './creat-test.component.html',\n  styleUrls: ['./creat-test.component.css']\n})\nexport class CreatTestComponent implements OnInit {\n  @Input() bool2: boolean;\n  create = {\n    subject_of_the_test: \"\",\n    name_the_Lecturer: \"\"\n  }\n  constructor(private serverService: ServerService) { }\n\n  ngOnInit(): void {\n  }\n  creatTest() {\n    this.serverService.postWithToken(\"api/tests/createTest\", this.create).subscribe(data => {\n      console.log(data)\n\n    })\n  }\n}\n","<div class=\"x\">\n    <div class=\"mb-3\">\n        <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n        <input [(ngModel)]=\"create.subject_of_the_test\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\"subject_of_the_test\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"exampleDropdownFormEmail2\" class=\"form-label\"></label>\n        <input [(ngModel)]=\"create.name_the_Lecturer\" type=\"email\" class=\"form-control\" id=\"exampleDropdownFormEmail2\" placeholder=\" name_the_Lecturer\">\n      </div>\n      <!-- <div class=\"mb-3\">\n        <div class=\"form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"dropdownCheck2\">\n          <label class=\"form-check-label\" for=\"dropdownCheck2\">\n            Remember me\n          </label>\n        </div>\n      </div> -->\n\n    <button (click)='creatTest()' type=\"submit\" class=\"btn btn-primary\">creatTest</button>\n    <app-upload-form></app-upload-form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  public chartOptions:any;\n  constructor(public fireBase: FireBaseService ) \n  { \n    this.chartOptions = {\n    series: [\n      {\n        name: \"Desktops\",\n        data: []\n      }\n    ],\n    chart: {\n      height: 350,\n      type: \"line\",\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    title: {\n      text: \"Product Trends by Month\",\n      align: \"left\"\n    },\n    grid: {\n      row: {\n        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.5\n      }\n    },\n    xaxis: {\n      categories: []\n    }\n  }; \n}\n\n  ngOnInit(): void {\n    for (var i=0; i < this.fireBase.internResult.listTestAnswers.length; i++) {\n      let score = this.fireBase.internResult.listTestAnswers[i].score;\n      this.chartOptions.series[0].data.push(score);\n    }\n    for (var i=0; i < this.fireBase.internResult.listTestAnswers.length; i++) {\n      let subject = this.fireBase.internResult.listTestAnswers[i].subject_of_the_test;\n      this.chartOptions.xaxis.categories.push(subject);\n    }\n  }\n  \n \n\n}\n\n\n\n","/* The content below is only a placeholder and can be replaced. */\n\n<div id=\"chart\">\n  <apx-chart\n    [series]=\"chartOptions.series\"\n    [chart]=\"chartOptions.chart\"\n    [xaxis]=\"chartOptions.xaxis\"\n    [dataLabels]=\"chartOptions.dataLabels\"\n    [grid]=\"chartOptions.grid\"\n    [stroke]=\"chartOptions.stroke\"\n    [title]=\"chartOptions.title\"\n  ></apx-chart>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { adminModel, personModel } from '../models/person.model';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\nadmin:any={\n  name:null,\n  Id:null,\npassword:null,\n}\n \nsupervisor:any={\n  name:\"\",\n  Id:\"\",\n  password:\"\"\n}\n\nconstructor(private router:ActivatedRoute) {\n  this.router.paramMap.subscribe(r=>this.admin.name=(r.get(\"name\")));\n  this.router.paramMap.subscribe(r=>this.admin.name=(r.get(\"Id\")));\n  this.router.paramMap.subscribe(r=>this.admin.name=(r.get(\"password\")));\n this.admin();\n}\n\n  ngOnInit(): void {\n  }\n\n  Admin(){\n    // this.homeService.createUser(this.personForm.value).subscribe(p => {\n    //   this.homeService.setUser(p);\n    //   // this.router.navigate([\"/app-code\"]);\n      \n    // }, err => {\n    //   console.log('err', err);\n    //     if(err.error && err.error.code === 11000) {\n    //       // user exists\n    //       this.errors = \"User already exists\";\n    //       return;\n    //     }\n    //   }\n    // );\n}\n\ncreatSuperviser(){\n  \n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\n\n@Component({\n  selector: 'app-test-page',\n  templateUrl: './test-page.component.html',\n  styleUrls: ['./test-page.component.css']\n})\nexport class TestPageComponent implements OnInit {\n\n  \n  constructor(public fireBase: FireBaseService) {\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"{{fireBase.allTests[fireBase.currentTestIndex].url}}\" alt=\"this is img\" style=\"width: 1000px; height: 800px;\">\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\nimport { FileUpload } from '../models/file-upload';\n@Component({\n  selector: 'app-upload-details',\n  templateUrl: './upload-details.component.html',\n  styleUrls: ['./upload-details.component.css']\n})\nexport class UploadDetailsComponent implements OnInit {\n  @Input() fileUpload: FileUpload;\n  constructor(private uploadService: FileUploadService) { }\n\n  ngOnInit(): void {\n  }\n  deleteFileUpload(fileUpload): void {\n    this.uploadService.deleteFile(fileUpload);\n  }\n \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  user: any;\n  registr: any\n  errors: any = '';\n  constructor(private homeService: HomeService, private serverService: ServerService,private router: Router) { }\n\n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n    this.registr = new FormGroup({\n      password: new FormControl('', [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n    });\n\n  }\n  sendForm() {\n    const obj: any = {}\n    for (const field in this.registr.controls) {\n      obj[field] = this.registr.controls[field].value;\n    }\n    console.log(obj)\n\n\n    const data = { ...this.user, ...obj }\n\n    this.serverService.updateDetails(data).subscribe(res => {\n      this.homeService.setUser(data);\n      this.router.navigate([\"/app-code\"]);\n    }, err => {\n      console.log('err', err);\n        if(err.error && err.error.code === 11000) {\n          // email exists\n          this.errors = \"Email already exists\";\n          return;\n        }\n      \n    });\n    console.log(data)\n  }\n\n}\n","\n<h1> Hi, {{user.full_name}} please type the \n   Password,\n    and Email </h1>\n\n<form [formGroup]='registr' (ngSubmit)='sendForm()'>\n\n    <div class=\"form-group b\">\n      <label >password</label>\n      <input formControlName='password' class=\"form-control\"  placeholder=\"password\">\n    </div>\n  <div class=\"form-group b\">\n      <label >Email</label>\n      <input formControlName='email' class=\"form-control\"  placeholder=\"email\">\n    </div>\n    <div class='error_messages'>{{errors}}</div>\n    <div class=\"form-group b\">\n      <button >NEXT</button>\n      <button >NEXT</button>\n    </div>\n  </form>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n\n@Component({\n  selector: 'app-sign-result2',\n  templateUrl: './sign-result2.component.html',\n  styleUrls: ['./sign-result2.component.css']\n})\nexport class SignResult2Component implements OnInit {\n  updatedcompletepersonForm: any;\n  updatepersonForm: any;\n  user: any;\n  roleNumber=100;\n\n\n  constructor(private serverService: ServerService, private homeService: HomeService,private router:Router) { }\n\n  ngOnInit(): void {\n\n    this.user = this.homeService.getUser();\n    console.log(this.user)\n    this.updatepersonForm = new FormGroup(  {\n      country: new FormControl('', [Validators.required]),\n      city: new FormControl('', [Validators.required]),\n      academic: new FormControl('', [Validators.required]),\n      age: new FormControl(0, [Validators.required, Validators.min(1), Validators.max(120)]),\n      year: new FormControl(0, [Validators.required, Validators.min(2020), Validators.max(2030)]),\n    });\n  }\n\n  sendForm() {\n    const obj: any = {};\n    for (const field in this.updatepersonForm.controls) { // 'field' is a string\n      obj[field] = this.updatepersonForm.controls[field].value,this.roleNumber;\n      console.log(obj)\n      this.router.navigate([\"/app-login1\"]); \n    }\n\n    const data = { roleNumber : this.roleNumber ,...this.user, ...obj, };\n\n    this.serverService.updateDetails(data).subscribe(res => {\n      this.homeService.setUser(data);\n    }, err => {\n      console.log(err);\n\n    });\n    console.log(data)\n\n  }\n\n}\n","<body class=\"z\">\n \n<p class=\"text-success ml-1\">personal details</p>\n<h1 class=\"mb-4\">please tell us about yourself, personally</h1>\n<form class= \"row g-3\" [formGroup]='updatepersonForm' (ngSubmit)='sendForm()'>\n\n  <div class=\"col-md-4 mb-2\">\n    <label >year</label>\n    <input formControlName='year' class=\"form-control\"  placeholder=\"year\">\n  </div>\n<div class=\"col-md-4 mb-2 \">\n    <label >age</label>\n    <input formControlName='age' class=\"form-control\"  placeholder=\"age\">\n  </div>\n \n  <div class=\"col-md-4 mb-2\">\n  <label for = \"country\"class= \"form-label\">Country </label>\n  <select id = \"country\" formControlName='country'name=\"country\" class=\"form-control\">\n    <option selected>Country</option>\n    <option value=\"Israel\">Israel</option>\n    <option value=\"Britain\">Britain</option>\n    <option value=\"France\">France</option>\n  </select>\n</div>\n\n<div class=\"col-md-4 mb-2\">\n  <label for = \"City\"class= \"form-label\">City </label>\n  <select id = \"City\" formControlName='city' name=\"city\" class=\"form-control\"  placeholder=\"City\"  >\n    <option selected>City</option>\n    <option value=\"jerusalem\">jerusalem</option>\n    <option value=\"London\">London</option>\n    <option value=\"Paris\">Paris</option>\n  </select>\n</div>\n  \n<div class=\"col-md-4 mb-2\">\n  <label for = \"academic\"class= \"form-label\">academic institution </label>\n  <select id = \"academic\" formControlName='academic' name=\"academic\" class=\"form-control\">\n    <option selected>Academic institution</option>\n    <option value=\"hadasa\">hadasa</option>\n    <option value=\"soroka\">soroka</option>\n    <option value=\"rambam\">rambam</option>\n  </select>\n</div>\n  \n<div class=\"form-group b\">\n    <button >NEXT</button>\n  </div>\n</form>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-manager-update-test',\n  templateUrl: './manager-update-test.component.html',\n  styleUrls: ['./manager-update-test.component.css']\n})\nexport class ManagerUpdateTestComponent implements OnInit {\n  error:any\n \n  selectUser={\n    full_name:\"\",\n    _id:\"\"\n  }\n  \n  // updateTestForm: FormGroup\n\n  // arr = [60,70,80,85,90,95,100];\n\n\n  constructor(public fireBaseService: FireBaseService,private serverService: ServerService) {\n    \n  }\n\n  ngOnInit(): void {\n\n    // this.updateTestForm = new FormGroup({\n    //   users: new FormControl('', [Validators.required]),\n    //   tests: new FormControl('', [Validators.required]),\n    //   urls: new FormControl('', [Validators.required]),\n    //   score: new FormControl(0, [Validators.required, Validators.min(0), Validators.max(100)]),\n    // });\n  }\n  sendForm() { }\n  sendTest() { }\n  \n  \n  onSelect(){\n    for(let i of this.fireBaseService.allUsers){      \n      if(i._id == this.selectUser._id){\n        this.selectUser.full_name = i.full_name;\n        break;\n      }\n    }\n    console.log(this.selectUser.full_name);\n    \n    \n    this.serverService.deleteWithToken(\"api/users/deleteUser/\", this.selectUser).subscribe(data => {\n   \n      console.log({ \"data from db\": data })\n    }, err => {\n      this.error = err.error;\n    })\n  }\n}\n\n\n\n\n\n  ","<!-- <select formControlName='users' class=\"form-control\" class=\"form-select form-select-sm\"\n    aria-label=\".form-select-sm example\">\n    <option selected>Open the Test list</option>\n    <option *ngFor=\"let i of fireBaseService.allUsers\" value={{i._id}}>{{i.full_name}}</option>\n</select> -->\n\n<div class=\"continer\">\n  <div class=\"row\">\n\n    <select   class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      [(ngModel)]='selectUser._id' aria-label=\".form-select-sm example\">\n      <option selected>Open the Users list</option>\n      <option *ngFor=\"let i of fireBaseService.allUsers\" [value]=\"i._id\">{{i.full_name}}</option>\n     \n      <div class='error_messages'>{{error}}</div>\n    </select>\n     <button (click)='onSelect()' type=\"submit\" class=\"btn btn-primary\">DELETE-USER</button> \n\n    <!-- (change)='onSelect()' -->\n    <!-- <select formControlName='tests' class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      aria-label=\".form-select-sm example\">\n      <option selected>Open the Test list</option>\n      <option *ngFor=\"let i of fireBaseService.allTests\" value=\"i._id\">{{i.subject_of_the_test}}</option>\n    </select>\n\n\n\n\n    <select formControlName='urls' class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      aria-label=\".form-select-sm example\">\n      <option selected>Open the all Answers </option>\n      <option *ngFor=\"let user of fireBaseService.allUsers\" value=\"i._id\">\n        <div *ngFor=\"let i of user.listTestAnswers\"> {{i.url}}</div>\n      </option>\n    </select>\n\n    <select formControlName='score' class=\"form-control col-3\" class=\"form-select form-select-sm\"\n      aria-label=\".form-select-sm example\">\n      <option selected>Select a score</option>\n      <option *ngFor=\"let i of arr\">{{i}}</option>\n    </select> -->\n\n  </div>\n</div>\n\n\n\n\n\n<!-- <select (change)='onSelect()' class=\"form-control\" class=\"form-select form-select-sm\" [(ngModel)]='SelectTest._id'\n        aria-label=\".form-select-sm example\">\n    \n        \n        <option *ngFor=\"let i of fireBaseService.allTests\" [value]=\"i._id\">{{i.subject_of_the_test}}</option>\n    </select -->\n\n\n\n\n\n\n<!-- <button>create test after score</button> -->\n\n<!-- <div class=\"col-auto  \">\n  <button  (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">all details\n         </button> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign-up1',\n  templateUrl: './sign-up1.component.html',\n  styleUrls: ['./sign-up1.component.css']\n})\nexport class SignUp1Component implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n    \n}\n\n","<h4>The password is incorrect</h4>\n\n ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { personModel } from 'src/app/components/models/person.model';\n\n@Component({\n  selector: 'app-sign-result',\n  templateUrl: './sign-result.component.html',\n  styleUrls: ['./sign-result.component.css']\n})\nexport class SignResultComponent implements OnInit {\n  user:any;\n  persons: personModel[] = [];\n  \n  constructor(private homeService: HomeService,private router:Router) { }\n\n  ngOnInit(): void {\n    this.user = this.homeService.getUser();\n  }\n\n  check(){\nthis.router.navigate([\"/app-sign-result1\"]);\n    }\n}\n","<div class=\"a\">\n    <h1>{{user.full_name}}</h1>\n   <div>please look straight at the <br> camera so we can spot you </div>\n<div></div>\n<div></div>\n   <h6>You will automatically be taken to the next step as<br> soon as you take a picture</h6>\n   <div class=\"col-auto\">\n    <button  (click)='check()' type=\"submit\" class=\"btn btn-primary mb-3\">CONTINUE</button>\n</div>\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { personModel } from '../components/models/person.model';\nimport { ServerService } from './server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  name:any;\n  // private person: BehaviorSubject<personModel[]>;\n\n  private _person = {};\n  \n  constructor(private serverService: ServerService) {\n    // this.person = new BehaviorSubject<personModel[]>(this._person);\n  }\n\n\n  getUser() {\n    return this._person;\n  }\n\n  setUser(data: any): void {\n    this._person = data;\n  }\n\n  createUser(a: personModel) {\n    return this.serverService.registerUser(a);\n  }\n\n  // set_name(name:personModel){\n  //   this.name=name\n  // }\n\n\n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { FileUploadService } from 'src/app/services/file-upload.service';\n\n@Component({\n  selector: 'app-upload-list',\n  templateUrl: './upload-list.component.html',\n  styleUrls: ['./upload-list.component.css']\n})\nexport class UploadListComponent implements OnInit {\n  fileUploads: any[];\n  constructor(private uploadService: FileUploadService) { }\n\n  ngOnInit(): void {\n    // console.log(\"reached oninint of upload-list\");\n    \n    // this.uploadService.getFiles(6).snapshotChanges().pipe(\n    //   map(changes =>\n    //     // store the key\n        \n    //     changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n    //   )\n    // ).subscribe(fileUploads => {\n    //   this.fileUploads = fileUploads;\n    //   console.log(\"fileUploads\", this.fileUploads);\n      \n    // });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n// import { JwtHelperService } from '@auth0/angular-jwt';\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    //  public jwtHelper: JwtHelperService\n    ) {}\n  // ...\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    // Check whether the token is expired and return\n    // true or false\n    // return !this.jwtHelper.isTokenExpired(token);\n    return !!token;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-practises',\n  templateUrl: './practises.component.html',\n  styleUrls: ['./practises.component.css']\n})\nexport class PractisesComponent implements OnInit {\n\n  isLoading: Boolean = true;\n  error: String = \"\";\n  errors: String = \"\";\n\n  constructor(private serverService: ServerService,\n    public fireBase: FireBaseService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAllTests()\n  }\n\n  getAllTests() {\n    this.serverService.getWithTokenArry(\"api/tests/getAllTests\").subscribe(data => {\n      this.fireBase.allTests = data as [];\n      this.isLoading = false;\n    })\n  }\n\n  showImg(index) {\n    this.fireBase.currentTestIndex = index;\n    console.log('kjbdsvjkbvdsjkbdsvjkbjkvds');\n\n    this.router.navigate(['/test-page'])\n  }\n\n  sendTest(data: any, testBtn: any) {\n    const test = { listTestQuestions: data };\n    this.serverService.putWithToken(\"api/users/updateUser\", test).subscribe(data => {\n      this.showImg(testBtn.value)\n      console.log({ \"data from db\": data })\n    }, err => {\n      this.error = err.error;\n    })\n  }\n\n  examResults() {\n    this.serverService. getWithToken(\"api/users/getUser\").subscribe(data => {\n      this.fireBase.internResult = data\n      console.log({ \"data from db\": data })\n    }, err => {\n      console.error(err);\n      this.errors = err;\n    })\n  this.router.navigate(['/app-exam-results'])\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <div>\n                <div class=\"s\">\n                    <app-upload-intern></app-upload-intern>\n                </div>\n\n\n            </div>\n        </div>\n        <div class=\"col-8\">\n            <div>\n                <div class=\"s\">\n                    <div class=\"flex-container height\">\n                        <div *ngIf=\"isLoading\">Tests are loading, Please wait</div>\n                            <table *ngIf=\"!isLoading\" class=\"table table-bordered table-hover col-md-1\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\"></th>\n                                    <th scope=\"col\">Test subject</th>\n                                    <th scope=\"col\">Lecturer name</th>\n                                    <th scope=\"col\">Download test</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor=\"let test of fireBase.allTests; let i = index\">\n                                    <th scope=\"row\">{{i+1}}</th>\n\n                                    <td>{{test.subject_of_the_test}}</td>\n                                    <td>{{test.name_the_Lecturer}}</td>\n                                    <td>\n                                        <button #testBtn value=\"{{i}}\" class=\"btn btn-primary\"\n                                            (click)=\"sendTest(test.subject_of_the_test, testBtn)\">\n                                            submit\n                                        </button>\n                                        <div *ngIf=\"error\">{{error}}</div>\n                                    </td>\n                                </tr>\n                               \n                            </tbody>\n                           \n                        </table>\n                        <div class=\"text-center\">\n                            <button (click)=\"examResults()\"  class=\"btn btn-primary col-7 col-md-5\">Exam results</button>\n                        </div>\n                        </div>\n                </div>\n            \n            </div>\n        </div>\n        <div class=\"col-2\">\n            <div>\n                <div class=\"s\"> xxxx</div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- <div style=\"text-align: center; clear: both\">\n  <div class=\"text-center\"> <button class=\"btn\">Exam results</button></div> \n</div> -->","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  user: any = {};\n\n \n  constructor() { }\n\nsetUser(datalogin:any){\n// localStorage=datalogin\n  this.user=datalogin\n}\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HomeService } from 'src/app/services/home.service';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  users_id: any;\n  personForm: any;\n  dataObj: any = [];\n  phoneArr: Array<any> = ['972', '050', '11'];\n  errors: any = '';\n\n  constructor(private homeService: HomeService,\n    private serverService: ServerService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.personForm = new FormGroup({\n      full_name: new FormControl('', [Validators.required]),\n      id: new FormControl(''),\n      passport: new FormControl(''),\n      phonenumber: new FormControl(''),\n      password: new FormControl(''),\n      email: new FormControl(''),\n    \n    });\n\n    this.dataObj = [{\n      name: 'ID Number',\n      formControlName: 'id'\n    },\n    {\n      name: 'Full Name',\n      formControlName: 'full_name'\n    },\n    {\n      name: 'Passport',\n      formControlName: 'passport'\n    },\n    {\n      name: 'Phone Number',\n      formControlName: 'phonenumber',\n      type: 'inputWithDropdown',\n      arr: this.phoneArr\n    },\n    {\n      name: 'password',\n      formControlName: 'password'\n    },\n    {\n      name: 'email',\n      formControlName: 'email'\n    },\n  ]\n  }\n\n  sendForm() {\n    console.log(this.personForm.value.name);\n    \n    \n    \n    this.homeService.createUser(this.personForm.value).subscribe(p => {\n      this.homeService.setUser(p);\n      this.router.navigate([\"/app-code\"]);\n      \n    }, err => {\n      console.log('err', err);\n        if(err.error && err.error.code === 11000) {\n          // user exists\n          this.errors = \"User already exists\";\n          return;\n        }\n      }\n    );\n  }\n}\n","<div class=\"c\">\n  <h2>Welcome,Intern </h2>\n  <h6>please fill in the following </h6>\n  <form [formGroup]=\"personForm\" (ngSubmit)='sendForm()' class='row'>\n\n    <div *ngFor=\"let data of dataObj\" class=\"form-group col-md-{{data.width || 4 }}\">\n      <label>{{data.name}}</label>\n      \n      <input *ngIf=\"!data.type\" formControlName={{data.formControlName}} class=\"form-control\" \n      placeholder=\"Please enter {{data.name}}\">\n\n      <input *ngIf=\"data.type === 'number'\" \n      type=\"number\"\n      formControlName={{data.formControlName}} class=\"form-control\" \n      placeholder=\"Please enter {{data.name}}\">\n\n\n      <div *ngIf=\"data.type === 'inputWithDropdown'\" class=\"input-group mb-3\">\n        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</button>\n        <ul class=\"dropdown-menu\">\n          <li *ngFor=\"let num of data.arr\">\n            <a class=\"dropdown-item\" href=\"#\">{{num}}</a>\n          </li>\n        </ul>\n        <input type=\"text\" class=\"form-control\" aria-label=\"Text input with dropdown button\"\n        placeholder=\"Please enter {{data.name}}\">\n      </div>\n   </div>\n\n   <h6>A verification code will be send to you to this number</h6>\n    <div class=\"form-group\">\n      <button [disabled]='!personForm.valid'>CONTINUE</button>\n    </div>\n\n    <div class='error_messages'>{{errors}}</div>\n  </form>\n</div>\n<!-- <div><button  >CONTINUE</button></div> -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CodeComponent } from './components/code/code.component';\nimport { HomComponent } from './components/hom/hom.component';\nimport { Login1Component } from './components/login1/login1.component';\nimport { ManagerComponent } from './components/manager/manager.component';\nimport { PractisesComponent } from './components/practises/practises.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { SignResultComponent } from './components/sign-result/sign-result.component';\nimport { SignResult1Component } from './components/sign-result1/sign-result1.component';\nimport { SignResult2Component } from './components/sign-result2/sign-result2.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { TestPageComponent } from './components/test-page/test-page.component';\nimport { TestComponent } from './components/test/test.component';\nimport { CanActivate } from '@angular/router';\nimport { \n  AuthGuardService as AuthGuard \n} from './auth/auth-guard.service';\nimport { AnswerTestPageComponent } from './components/answer-test-page/answer-test-page.component';\nimport { ExamResultsComponent } from './components/exam-results/exam-results.component';\n\n\n\n\nconst routes: Routes = [ \n  {path:'',component:HomComponent}, \n  {path:'sign-up',component:SignUpComponent},\n  {path:'app-registration',component:RegistrationComponent},\n  {path:'sign-result',component:SignResultComponent},\n  {path:'app-code',component:CodeComponent},\n  {path:'app-sign-result1',component:SignResult1Component},\n  {path:'app-sign-result2',component:SignResult2Component},\n  {path:'app-test',component:TestComponent},\n  {path:'app-login1',component:Login1Component},\n  {path:'app-manager',component:ManagerComponent, canActivate: [AuthGuard]},\n  {path:'app-practises',component:PractisesComponent, canActivate: [AuthGuard]},\n  {path:'test-page',component:TestPageComponent},\n  {path:'app-answer-test-page',component:AnswerTestPageComponent},\n  {path:'app-exam-results',component:ExamResultsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FireBaseService {\n  internResult= null\n  allUsers=[];\n  allTests = [];\n  correntResultIndex=null;\n  currentTestIndex = null; \n  currentAnswerTestIndex=null;\n  \n  \n  constructor() { }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { FireBaseService } from 'src/app/services/fire-base.service';\n\n@Component({\n  selector: 'app-see-result',\n  templateUrl: './see-result.component.html',\n  styleUrls: ['./see-result.component.css']\n})\nexport class SeeResultComponent implements OnInit {\n\n  constructor(public fireBase: FireBaseService) { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<img src=\"{{fireBase.internResult.listTestAnswers[fireBase.correntResultIndex].url}}\" alt=\"this is img\" style=\"width: 1000px; height: 800px;\">\n\n\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}