version: 0.2

phases:
  
  pre_build:
    commands:
      - echo login in to ECR
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URL=https://044524633564.dkr.ecr.eu-west-1.amazonaws.com/ecr
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)   #  using commit hash to tag my docker image
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -f":" '{print $2}') 


  build:
    commands:
      - echo building the docker image...
      - docker build -t $REPOSITORY_URL:latest .
      - docker tage $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
      
      
  post_build:
    commands:
      - echo pushing the docker images... 
      - docker push $REPOSITORY_URL:latest
      - docker push $REPOSITORY_URL:$IMAGE_TAG
      - echo  writing image definitions file.... 
      - print '[{"name":"nodeapp","imageUrl":"%s"}]'  $REPOSITORY_URL:$IMAGE_TAG >imagedefinitions.json
      - cat imagedefinitions.json


artifacts:
  files:  imagedefinitions.json
    
 












# install:
#     commands:
#       # Update libs
#       - apt-get update
#       # Headless Chrome
#       - apt-get install -y fonts-liberation libasound2 libnspr4 libnss3 libx11-xcb1 xdg-utils libxss1 libappindicator1 libindicator7
#       - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
#       - dpkg -i google-chrome*.deb




# - npm install
#       - npm run build:ci
#       - npm run test:ci


# aws s3 sync ./dist/angular-devops s3://angular-devops-production --acl 'public-read' --delete- '**/*.html'
    
    
    
    
    # - '**/*.js'
    # - '**/*.css'
    # - '**/*.ico'

  
#   base-directory: 'dist/angular-devops'
